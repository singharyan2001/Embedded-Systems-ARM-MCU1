
Fault_gen.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000011b0  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000bc  08001350  08001350  00011350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800140c  0800140c  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  0800140c  0800140c  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800140c  0800140c  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800140c  0800140c  0001140c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001410  08001410  00011410  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001414  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001470  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001470  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000987  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000035d  00000000  00000000  00020a56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000130  00000000  00000000  00020db8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d0  00000000  00000000  00020ee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002c89  00000000  00000000  00020fb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000149d  00000000  00000000  00023c41  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009797  00000000  00000000  000250de  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b58  00000000  00000000  0002e878  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007f  00000000  00000000  0002f3d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001338 	.word	0x08001338

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	08001338 	.word	0x08001338

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af00      	add	r7, sp, #0
	//1. Enable all configurable exceptions like usage fault, mem manage fault, and bus fault
	uint32_t *pSHCSR = (uint32_t *)0xE000ED24;	//Address of System handler control and state register
 8000286:	4b10      	ldr	r3, [pc, #64]	; (80002c8 <main+0x48>)
 8000288:	60fb      	str	r3, [r7, #12]
	*pSHCSR |= (1<<16); //Mem manage
 800028a:	68fb      	ldr	r3, [r7, #12]
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8000292:	68fb      	ldr	r3, [r7, #12]
 8000294:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1<<17); //bus fault
 8000296:	68fb      	ldr	r3, [r7, #12]
 8000298:	681b      	ldr	r3, [r3, #0]
 800029a:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 800029e:	68fb      	ldr	r3, [r7, #12]
 80002a0:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1<<18); //usage fault
 80002a2:	68fb      	ldr	r3, [r7, #12]
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80002aa:	68fb      	ldr	r3, [r7, #12]
 80002ac:	601a      	str	r2, [r3, #0]

	//3. lets force the processor to execute some undefined instruction.
	uint32_t *pSRAM = (uint32_t *)0x20010000;	//Pointer to some address in SRAM Region
 80002ae:	4b07      	ldr	r3, [pc, #28]	; (80002cc <main+0x4c>)
 80002b0:	60bb      	str	r3, [r7, #8]
	*pSRAM = 0xFFFFFFFF;						//Modifying data at the location at which the pointer is pointing at.
 80002b2:	68bb      	ldr	r3, [r7, #8]
 80002b4:	f04f 32ff 	mov.w	r2, #4294967295
 80002b8:	601a      	str	r2, [r3, #0]

	void(*some_address) (void);					//Creating a function pointer.

	some_address = (void*)((uint32_t *)pSRAM + 1);	//Initialize this function pointer to this SRAM location.
 80002ba:	68bb      	ldr	r3, [r7, #8]
 80002bc:	3304      	adds	r3, #4
 80002be:	607b      	str	r3, [r7, #4]

	some_address();								//Dereference this function pointer.
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4798      	blx	r3
	//4. Analyze the fault
    /* Loop forever */
	for(;;);
 80002c4:	e7fe      	b.n	80002c4 <main+0x44>
 80002c6:	bf00      	nop
 80002c8:	e000ed24 	.word	0xe000ed24
 80002cc:	20010000 	.word	0x20010000

080002d0 <HardFault_Handler>:
}

//2. Implement the fault handlers

void HardFault_Handler(void)
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	af00      	add	r7, sp, #0
	printf("[Hardfault Exception occurred]");
 80002d4:	4801      	ldr	r0, [pc, #4]	; (80002dc <HardFault_Handler+0xc>)
 80002d6:	f000 f9b9 	bl	800064c <iprintf>
	while(1);
 80002da:	e7fe      	b.n	80002da <HardFault_Handler+0xa>
 80002dc:	08001350 	.word	0x08001350

080002e0 <MemManage_Handler>:
}

void MemManage_Handler(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
	printf("[MemMange Exception occurred]");
 80002e4:	4801      	ldr	r0, [pc, #4]	; (80002ec <MemManage_Handler+0xc>)
 80002e6:	f000 f9b1 	bl	800064c <iprintf>
	while(1);
 80002ea:	e7fe      	b.n	80002ea <MemManage_Handler+0xa>
 80002ec:	08001370 	.word	0x08001370

080002f0 <BusFault_Handler>:
}

void BusFault_Handler(void)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	af00      	add	r7, sp, #0
	printf("[BusFault Exception occurred]");
 80002f4:	4801      	ldr	r0, [pc, #4]	; (80002fc <BusFault_Handler+0xc>)
 80002f6:	f000 f9a9 	bl	800064c <iprintf>
	while(1);
 80002fa:	e7fe      	b.n	80002fa <BusFault_Handler+0xa>
 80002fc:	08001390 	.word	0x08001390

08000300 <UsageFault_Handler>:
}

void UsageFault_Handler(void)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	b082      	sub	sp, #8
 8000304:	af00      	add	r7, sp, #0
	uint32_t *pUFSR = (uint32_t *)0xE000ED2A;	//Address of usage fault status register.
 8000306:	4b06      	ldr	r3, [pc, #24]	; (8000320 <UsageFault_Handler+0x20>)
 8000308:	607b      	str	r3, [r7, #4]
	printf("[Usage Exception occurred]");
 800030a:	4806      	ldr	r0, [pc, #24]	; (8000324 <UsageFault_Handler+0x24>)
 800030c:	f000 f99e 	bl	800064c <iprintf>
	printf("UFSR = %lx\n", (*pUFSR) & 0xFFFF);	//UFSR is a 16 bit register.
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	b29b      	uxth	r3, r3
 8000316:	4619      	mov	r1, r3
 8000318:	4803      	ldr	r0, [pc, #12]	; (8000328 <UsageFault_Handler+0x28>)
 800031a:	f000 f997 	bl	800064c <iprintf>
	while(1);
 800031e:	e7fe      	b.n	800031e <UsageFault_Handler+0x1e>
 8000320:	e000ed2a 	.word	0xe000ed2a
 8000324:	080013b0 	.word	0x080013b0
 8000328:	080013cc 	.word	0x080013cc

0800032c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800032c:	b580      	push	{r7, lr}
 800032e:	b086      	sub	sp, #24
 8000330:	af00      	add	r7, sp, #0
 8000332:	60f8      	str	r0, [r7, #12]
 8000334:	60b9      	str	r1, [r7, #8]
 8000336:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000338:	2300      	movs	r3, #0
 800033a:	617b      	str	r3, [r7, #20]
 800033c:	e00a      	b.n	8000354 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800033e:	f3af 8000 	nop.w
 8000342:	4601      	mov	r1, r0
 8000344:	68bb      	ldr	r3, [r7, #8]
 8000346:	1c5a      	adds	r2, r3, #1
 8000348:	60ba      	str	r2, [r7, #8]
 800034a:	b2ca      	uxtb	r2, r1
 800034c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034e:	697b      	ldr	r3, [r7, #20]
 8000350:	3301      	adds	r3, #1
 8000352:	617b      	str	r3, [r7, #20]
 8000354:	697a      	ldr	r2, [r7, #20]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	429a      	cmp	r2, r3
 800035a:	dbf0      	blt.n	800033e <_read+0x12>
  }

  return len;
 800035c:	687b      	ldr	r3, [r7, #4]
}
 800035e:	4618      	mov	r0, r3
 8000360:	3718      	adds	r7, #24
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}

08000366 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000366:	b580      	push	{r7, lr}
 8000368:	b086      	sub	sp, #24
 800036a:	af00      	add	r7, sp, #0
 800036c:	60f8      	str	r0, [r7, #12]
 800036e:	60b9      	str	r1, [r7, #8]
 8000370:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000372:	2300      	movs	r3, #0
 8000374:	617b      	str	r3, [r7, #20]
 8000376:	e009      	b.n	800038c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000378:	68bb      	ldr	r3, [r7, #8]
 800037a:	1c5a      	adds	r2, r3, #1
 800037c:	60ba      	str	r2, [r7, #8]
 800037e:	781b      	ldrb	r3, [r3, #0]
 8000380:	4618      	mov	r0, r3
 8000382:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000386:	697b      	ldr	r3, [r7, #20]
 8000388:	3301      	adds	r3, #1
 800038a:	617b      	str	r3, [r7, #20]
 800038c:	697a      	ldr	r2, [r7, #20]
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	429a      	cmp	r2, r3
 8000392:	dbf1      	blt.n	8000378 <_write+0x12>
  }
  return len;
 8000394:	687b      	ldr	r3, [r7, #4]
}
 8000396:	4618      	mov	r0, r3
 8000398:	3718      	adds	r7, #24
 800039a:	46bd      	mov	sp, r7
 800039c:	bd80      	pop	{r7, pc}

0800039e <_close>:

int _close(int file)
{
 800039e:	b480      	push	{r7}
 80003a0:	b083      	sub	sp, #12
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003a6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003aa:	4618      	mov	r0, r3
 80003ac:	370c      	adds	r7, #12
 80003ae:	46bd      	mov	sp, r7
 80003b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b4:	4770      	bx	lr

080003b6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003b6:	b480      	push	{r7}
 80003b8:	b083      	sub	sp, #12
 80003ba:	af00      	add	r7, sp, #0
 80003bc:	6078      	str	r0, [r7, #4]
 80003be:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003c0:	683b      	ldr	r3, [r7, #0]
 80003c2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003c6:	605a      	str	r2, [r3, #4]
  return 0;
 80003c8:	2300      	movs	r3, #0
}
 80003ca:	4618      	mov	r0, r3
 80003cc:	370c      	adds	r7, #12
 80003ce:	46bd      	mov	sp, r7
 80003d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003d4:	4770      	bx	lr

080003d6 <_isatty>:

int _isatty(int file)
{
 80003d6:	b480      	push	{r7}
 80003d8:	b083      	sub	sp, #12
 80003da:	af00      	add	r7, sp, #0
 80003dc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003de:	2301      	movs	r3, #1
}
 80003e0:	4618      	mov	r0, r3
 80003e2:	370c      	adds	r7, #12
 80003e4:	46bd      	mov	sp, r7
 80003e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ea:	4770      	bx	lr

080003ec <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003ec:	b480      	push	{r7}
 80003ee:	b085      	sub	sp, #20
 80003f0:	af00      	add	r7, sp, #0
 80003f2:	60f8      	str	r0, [r7, #12]
 80003f4:	60b9      	str	r1, [r7, #8]
 80003f6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003f8:	2300      	movs	r3, #0
}
 80003fa:	4618      	mov	r0, r3
 80003fc:	3714      	adds	r7, #20
 80003fe:	46bd      	mov	sp, r7
 8000400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000404:	4770      	bx	lr
	...

08000408 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000408:	b580      	push	{r7, lr}
 800040a:	b086      	sub	sp, #24
 800040c:	af00      	add	r7, sp, #0
 800040e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000410:	4a14      	ldr	r2, [pc, #80]	; (8000464 <_sbrk+0x5c>)
 8000412:	4b15      	ldr	r3, [pc, #84]	; (8000468 <_sbrk+0x60>)
 8000414:	1ad3      	subs	r3, r2, r3
 8000416:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000418:	697b      	ldr	r3, [r7, #20]
 800041a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800041c:	4b13      	ldr	r3, [pc, #76]	; (800046c <_sbrk+0x64>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	2b00      	cmp	r3, #0
 8000422:	d102      	bne.n	800042a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000424:	4b11      	ldr	r3, [pc, #68]	; (800046c <_sbrk+0x64>)
 8000426:	4a12      	ldr	r2, [pc, #72]	; (8000470 <_sbrk+0x68>)
 8000428:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800042a:	4b10      	ldr	r3, [pc, #64]	; (800046c <_sbrk+0x64>)
 800042c:	681a      	ldr	r2, [r3, #0]
 800042e:	687b      	ldr	r3, [r7, #4]
 8000430:	4413      	add	r3, r2
 8000432:	693a      	ldr	r2, [r7, #16]
 8000434:	429a      	cmp	r2, r3
 8000436:	d207      	bcs.n	8000448 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000438:	f000 f9ac 	bl	8000794 <__errno>
 800043c:	4603      	mov	r3, r0
 800043e:	220c      	movs	r2, #12
 8000440:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000442:	f04f 33ff 	mov.w	r3, #4294967295
 8000446:	e009      	b.n	800045c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000448:	4b08      	ldr	r3, [pc, #32]	; (800046c <_sbrk+0x64>)
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800044e:	4b07      	ldr	r3, [pc, #28]	; (800046c <_sbrk+0x64>)
 8000450:	681a      	ldr	r2, [r3, #0]
 8000452:	687b      	ldr	r3, [r7, #4]
 8000454:	4413      	add	r3, r2
 8000456:	4a05      	ldr	r2, [pc, #20]	; (800046c <_sbrk+0x64>)
 8000458:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800045a:	68fb      	ldr	r3, [r7, #12]
}
 800045c:	4618      	mov	r0, r3
 800045e:	3718      	adds	r7, #24
 8000460:	46bd      	mov	sp, r7
 8000462:	bd80      	pop	{r7, pc}
 8000464:	20020000 	.word	0x20020000
 8000468:	00000400 	.word	0x00000400
 800046c:	20000078 	.word	0x20000078
 8000470:	200001c8 	.word	0x200001c8

08000474 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000474:	480d      	ldr	r0, [pc, #52]	; (80004ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000476:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000478:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800047c:	480c      	ldr	r0, [pc, #48]	; (80004b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800047e:	490d      	ldr	r1, [pc, #52]	; (80004b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000480:	4a0d      	ldr	r2, [pc, #52]	; (80004b8 <LoopForever+0xe>)
  movs r3, #0
 8000482:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000484:	e002      	b.n	800048c <LoopCopyDataInit>

08000486 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000486:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000488:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800048a:	3304      	adds	r3, #4

0800048c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800048c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800048e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000490:	d3f9      	bcc.n	8000486 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000492:	4a0a      	ldr	r2, [pc, #40]	; (80004bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000494:	4c0a      	ldr	r4, [pc, #40]	; (80004c0 <LoopForever+0x16>)
  movs r3, #0
 8000496:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000498:	e001      	b.n	800049e <LoopFillZerobss>

0800049a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800049a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800049c:	3204      	adds	r2, #4

0800049e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800049e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004a0:	d3fb      	bcc.n	800049a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004a2:	f000 f97d 	bl	80007a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004a6:	f7ff feeb 	bl	8000280 <main>

080004aa <LoopForever>:

LoopForever:
  b LoopForever
 80004aa:	e7fe      	b.n	80004aa <LoopForever>
  ldr   r0, =_estack
 80004ac:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004b4:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80004b8:	08001414 	.word	0x08001414
  ldr r2, =_sbss
 80004bc:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80004c0:	200001c8 	.word	0x200001c8

080004c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004c4:	e7fe      	b.n	80004c4 <ADC_IRQHandler>
	...

080004c8 <std>:
 80004c8:	2300      	movs	r3, #0
 80004ca:	b510      	push	{r4, lr}
 80004cc:	4604      	mov	r4, r0
 80004ce:	e9c0 3300 	strd	r3, r3, [r0]
 80004d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80004d6:	6083      	str	r3, [r0, #8]
 80004d8:	8181      	strh	r1, [r0, #12]
 80004da:	6643      	str	r3, [r0, #100]	; 0x64
 80004dc:	81c2      	strh	r2, [r0, #14]
 80004de:	6183      	str	r3, [r0, #24]
 80004e0:	4619      	mov	r1, r3
 80004e2:	2208      	movs	r2, #8
 80004e4:	305c      	adds	r0, #92	; 0x5c
 80004e6:	f000 f906 	bl	80006f6 <memset>
 80004ea:	4b0d      	ldr	r3, [pc, #52]	; (8000520 <std+0x58>)
 80004ec:	6263      	str	r3, [r4, #36]	; 0x24
 80004ee:	4b0d      	ldr	r3, [pc, #52]	; (8000524 <std+0x5c>)
 80004f0:	62a3      	str	r3, [r4, #40]	; 0x28
 80004f2:	4b0d      	ldr	r3, [pc, #52]	; (8000528 <std+0x60>)
 80004f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004f6:	4b0d      	ldr	r3, [pc, #52]	; (800052c <std+0x64>)
 80004f8:	6323      	str	r3, [r4, #48]	; 0x30
 80004fa:	4b0d      	ldr	r3, [pc, #52]	; (8000530 <std+0x68>)
 80004fc:	6224      	str	r4, [r4, #32]
 80004fe:	429c      	cmp	r4, r3
 8000500:	d006      	beq.n	8000510 <std+0x48>
 8000502:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000506:	4294      	cmp	r4, r2
 8000508:	d002      	beq.n	8000510 <std+0x48>
 800050a:	33d0      	adds	r3, #208	; 0xd0
 800050c:	429c      	cmp	r4, r3
 800050e:	d105      	bne.n	800051c <std+0x54>
 8000510:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000518:	f000 b966 	b.w	80007e8 <__retarget_lock_init_recursive>
 800051c:	bd10      	pop	{r4, pc}
 800051e:	bf00      	nop
 8000520:	08000671 	.word	0x08000671
 8000524:	08000693 	.word	0x08000693
 8000528:	080006cb 	.word	0x080006cb
 800052c:	080006ef 	.word	0x080006ef
 8000530:	2000007c 	.word	0x2000007c

08000534 <stdio_exit_handler>:
 8000534:	4a02      	ldr	r2, [pc, #8]	; (8000540 <stdio_exit_handler+0xc>)
 8000536:	4903      	ldr	r1, [pc, #12]	; (8000544 <stdio_exit_handler+0x10>)
 8000538:	4803      	ldr	r0, [pc, #12]	; (8000548 <stdio_exit_handler+0x14>)
 800053a:	f000 b869 	b.w	8000610 <_fwalk_sglue>
 800053e:	bf00      	nop
 8000540:	20000000 	.word	0x20000000
 8000544:	08001095 	.word	0x08001095
 8000548:	2000000c 	.word	0x2000000c

0800054c <cleanup_stdio>:
 800054c:	6841      	ldr	r1, [r0, #4]
 800054e:	4b0c      	ldr	r3, [pc, #48]	; (8000580 <cleanup_stdio+0x34>)
 8000550:	4299      	cmp	r1, r3
 8000552:	b510      	push	{r4, lr}
 8000554:	4604      	mov	r4, r0
 8000556:	d001      	beq.n	800055c <cleanup_stdio+0x10>
 8000558:	f000 fd9c 	bl	8001094 <_fflush_r>
 800055c:	68a1      	ldr	r1, [r4, #8]
 800055e:	4b09      	ldr	r3, [pc, #36]	; (8000584 <cleanup_stdio+0x38>)
 8000560:	4299      	cmp	r1, r3
 8000562:	d002      	beq.n	800056a <cleanup_stdio+0x1e>
 8000564:	4620      	mov	r0, r4
 8000566:	f000 fd95 	bl	8001094 <_fflush_r>
 800056a:	68e1      	ldr	r1, [r4, #12]
 800056c:	4b06      	ldr	r3, [pc, #24]	; (8000588 <cleanup_stdio+0x3c>)
 800056e:	4299      	cmp	r1, r3
 8000570:	d004      	beq.n	800057c <cleanup_stdio+0x30>
 8000572:	4620      	mov	r0, r4
 8000574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000578:	f000 bd8c 	b.w	8001094 <_fflush_r>
 800057c:	bd10      	pop	{r4, pc}
 800057e:	bf00      	nop
 8000580:	2000007c 	.word	0x2000007c
 8000584:	200000e4 	.word	0x200000e4
 8000588:	2000014c 	.word	0x2000014c

0800058c <global_stdio_init.part.0>:
 800058c:	b510      	push	{r4, lr}
 800058e:	4b0b      	ldr	r3, [pc, #44]	; (80005bc <global_stdio_init.part.0+0x30>)
 8000590:	4c0b      	ldr	r4, [pc, #44]	; (80005c0 <global_stdio_init.part.0+0x34>)
 8000592:	4a0c      	ldr	r2, [pc, #48]	; (80005c4 <global_stdio_init.part.0+0x38>)
 8000594:	601a      	str	r2, [r3, #0]
 8000596:	4620      	mov	r0, r4
 8000598:	2200      	movs	r2, #0
 800059a:	2104      	movs	r1, #4
 800059c:	f7ff ff94 	bl	80004c8 <std>
 80005a0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80005a4:	2201      	movs	r2, #1
 80005a6:	2109      	movs	r1, #9
 80005a8:	f7ff ff8e 	bl	80004c8 <std>
 80005ac:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80005b0:	2202      	movs	r2, #2
 80005b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005b6:	2112      	movs	r1, #18
 80005b8:	f7ff bf86 	b.w	80004c8 <std>
 80005bc:	200001b4 	.word	0x200001b4
 80005c0:	2000007c 	.word	0x2000007c
 80005c4:	08000535 	.word	0x08000535

080005c8 <__sfp_lock_acquire>:
 80005c8:	4801      	ldr	r0, [pc, #4]	; (80005d0 <__sfp_lock_acquire+0x8>)
 80005ca:	f000 b90e 	b.w	80007ea <__retarget_lock_acquire_recursive>
 80005ce:	bf00      	nop
 80005d0:	200001bd 	.word	0x200001bd

080005d4 <__sfp_lock_release>:
 80005d4:	4801      	ldr	r0, [pc, #4]	; (80005dc <__sfp_lock_release+0x8>)
 80005d6:	f000 b909 	b.w	80007ec <__retarget_lock_release_recursive>
 80005da:	bf00      	nop
 80005dc:	200001bd 	.word	0x200001bd

080005e0 <__sinit>:
 80005e0:	b510      	push	{r4, lr}
 80005e2:	4604      	mov	r4, r0
 80005e4:	f7ff fff0 	bl	80005c8 <__sfp_lock_acquire>
 80005e8:	6a23      	ldr	r3, [r4, #32]
 80005ea:	b11b      	cbz	r3, 80005f4 <__sinit+0x14>
 80005ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005f0:	f7ff bff0 	b.w	80005d4 <__sfp_lock_release>
 80005f4:	4b04      	ldr	r3, [pc, #16]	; (8000608 <__sinit+0x28>)
 80005f6:	6223      	str	r3, [r4, #32]
 80005f8:	4b04      	ldr	r3, [pc, #16]	; (800060c <__sinit+0x2c>)
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	2b00      	cmp	r3, #0
 80005fe:	d1f5      	bne.n	80005ec <__sinit+0xc>
 8000600:	f7ff ffc4 	bl	800058c <global_stdio_init.part.0>
 8000604:	e7f2      	b.n	80005ec <__sinit+0xc>
 8000606:	bf00      	nop
 8000608:	0800054d 	.word	0x0800054d
 800060c:	200001b4 	.word	0x200001b4

08000610 <_fwalk_sglue>:
 8000610:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000614:	4607      	mov	r7, r0
 8000616:	4688      	mov	r8, r1
 8000618:	4614      	mov	r4, r2
 800061a:	2600      	movs	r6, #0
 800061c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000620:	f1b9 0901 	subs.w	r9, r9, #1
 8000624:	d505      	bpl.n	8000632 <_fwalk_sglue+0x22>
 8000626:	6824      	ldr	r4, [r4, #0]
 8000628:	2c00      	cmp	r4, #0
 800062a:	d1f7      	bne.n	800061c <_fwalk_sglue+0xc>
 800062c:	4630      	mov	r0, r6
 800062e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000632:	89ab      	ldrh	r3, [r5, #12]
 8000634:	2b01      	cmp	r3, #1
 8000636:	d907      	bls.n	8000648 <_fwalk_sglue+0x38>
 8000638:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800063c:	3301      	adds	r3, #1
 800063e:	d003      	beq.n	8000648 <_fwalk_sglue+0x38>
 8000640:	4629      	mov	r1, r5
 8000642:	4638      	mov	r0, r7
 8000644:	47c0      	blx	r8
 8000646:	4306      	orrs	r6, r0
 8000648:	3568      	adds	r5, #104	; 0x68
 800064a:	e7e9      	b.n	8000620 <_fwalk_sglue+0x10>

0800064c <iprintf>:
 800064c:	b40f      	push	{r0, r1, r2, r3}
 800064e:	b507      	push	{r0, r1, r2, lr}
 8000650:	4906      	ldr	r1, [pc, #24]	; (800066c <iprintf+0x20>)
 8000652:	ab04      	add	r3, sp, #16
 8000654:	6808      	ldr	r0, [r1, #0]
 8000656:	f853 2b04 	ldr.w	r2, [r3], #4
 800065a:	6881      	ldr	r1, [r0, #8]
 800065c:	9301      	str	r3, [sp, #4]
 800065e:	f000 f9e9 	bl	8000a34 <_vfiprintf_r>
 8000662:	b003      	add	sp, #12
 8000664:	f85d eb04 	ldr.w	lr, [sp], #4
 8000668:	b004      	add	sp, #16
 800066a:	4770      	bx	lr
 800066c:	20000058 	.word	0x20000058

08000670 <__sread>:
 8000670:	b510      	push	{r4, lr}
 8000672:	460c      	mov	r4, r1
 8000674:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000678:	f000 f868 	bl	800074c <_read_r>
 800067c:	2800      	cmp	r0, #0
 800067e:	bfab      	itete	ge
 8000680:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000682:	89a3      	ldrhlt	r3, [r4, #12]
 8000684:	181b      	addge	r3, r3, r0
 8000686:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800068a:	bfac      	ite	ge
 800068c:	6563      	strge	r3, [r4, #84]	; 0x54
 800068e:	81a3      	strhlt	r3, [r4, #12]
 8000690:	bd10      	pop	{r4, pc}

08000692 <__swrite>:
 8000692:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000696:	461f      	mov	r7, r3
 8000698:	898b      	ldrh	r3, [r1, #12]
 800069a:	05db      	lsls	r3, r3, #23
 800069c:	4605      	mov	r5, r0
 800069e:	460c      	mov	r4, r1
 80006a0:	4616      	mov	r6, r2
 80006a2:	d505      	bpl.n	80006b0 <__swrite+0x1e>
 80006a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006a8:	2302      	movs	r3, #2
 80006aa:	2200      	movs	r2, #0
 80006ac:	f000 f83c 	bl	8000728 <_lseek_r>
 80006b0:	89a3      	ldrh	r3, [r4, #12]
 80006b2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80006b6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80006ba:	81a3      	strh	r3, [r4, #12]
 80006bc:	4632      	mov	r2, r6
 80006be:	463b      	mov	r3, r7
 80006c0:	4628      	mov	r0, r5
 80006c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80006c6:	f000 b853 	b.w	8000770 <_write_r>

080006ca <__sseek>:
 80006ca:	b510      	push	{r4, lr}
 80006cc:	460c      	mov	r4, r1
 80006ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006d2:	f000 f829 	bl	8000728 <_lseek_r>
 80006d6:	1c43      	adds	r3, r0, #1
 80006d8:	89a3      	ldrh	r3, [r4, #12]
 80006da:	bf15      	itete	ne
 80006dc:	6560      	strne	r0, [r4, #84]	; 0x54
 80006de:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80006e2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80006e6:	81a3      	strheq	r3, [r4, #12]
 80006e8:	bf18      	it	ne
 80006ea:	81a3      	strhne	r3, [r4, #12]
 80006ec:	bd10      	pop	{r4, pc}

080006ee <__sclose>:
 80006ee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006f2:	f000 b809 	b.w	8000708 <_close_r>

080006f6 <memset>:
 80006f6:	4402      	add	r2, r0
 80006f8:	4603      	mov	r3, r0
 80006fa:	4293      	cmp	r3, r2
 80006fc:	d100      	bne.n	8000700 <memset+0xa>
 80006fe:	4770      	bx	lr
 8000700:	f803 1b01 	strb.w	r1, [r3], #1
 8000704:	e7f9      	b.n	80006fa <memset+0x4>
	...

08000708 <_close_r>:
 8000708:	b538      	push	{r3, r4, r5, lr}
 800070a:	4d06      	ldr	r5, [pc, #24]	; (8000724 <_close_r+0x1c>)
 800070c:	2300      	movs	r3, #0
 800070e:	4604      	mov	r4, r0
 8000710:	4608      	mov	r0, r1
 8000712:	602b      	str	r3, [r5, #0]
 8000714:	f7ff fe43 	bl	800039e <_close>
 8000718:	1c43      	adds	r3, r0, #1
 800071a:	d102      	bne.n	8000722 <_close_r+0x1a>
 800071c:	682b      	ldr	r3, [r5, #0]
 800071e:	b103      	cbz	r3, 8000722 <_close_r+0x1a>
 8000720:	6023      	str	r3, [r4, #0]
 8000722:	bd38      	pop	{r3, r4, r5, pc}
 8000724:	200001b8 	.word	0x200001b8

08000728 <_lseek_r>:
 8000728:	b538      	push	{r3, r4, r5, lr}
 800072a:	4d07      	ldr	r5, [pc, #28]	; (8000748 <_lseek_r+0x20>)
 800072c:	4604      	mov	r4, r0
 800072e:	4608      	mov	r0, r1
 8000730:	4611      	mov	r1, r2
 8000732:	2200      	movs	r2, #0
 8000734:	602a      	str	r2, [r5, #0]
 8000736:	461a      	mov	r2, r3
 8000738:	f7ff fe58 	bl	80003ec <_lseek>
 800073c:	1c43      	adds	r3, r0, #1
 800073e:	d102      	bne.n	8000746 <_lseek_r+0x1e>
 8000740:	682b      	ldr	r3, [r5, #0]
 8000742:	b103      	cbz	r3, 8000746 <_lseek_r+0x1e>
 8000744:	6023      	str	r3, [r4, #0]
 8000746:	bd38      	pop	{r3, r4, r5, pc}
 8000748:	200001b8 	.word	0x200001b8

0800074c <_read_r>:
 800074c:	b538      	push	{r3, r4, r5, lr}
 800074e:	4d07      	ldr	r5, [pc, #28]	; (800076c <_read_r+0x20>)
 8000750:	4604      	mov	r4, r0
 8000752:	4608      	mov	r0, r1
 8000754:	4611      	mov	r1, r2
 8000756:	2200      	movs	r2, #0
 8000758:	602a      	str	r2, [r5, #0]
 800075a:	461a      	mov	r2, r3
 800075c:	f7ff fde6 	bl	800032c <_read>
 8000760:	1c43      	adds	r3, r0, #1
 8000762:	d102      	bne.n	800076a <_read_r+0x1e>
 8000764:	682b      	ldr	r3, [r5, #0]
 8000766:	b103      	cbz	r3, 800076a <_read_r+0x1e>
 8000768:	6023      	str	r3, [r4, #0]
 800076a:	bd38      	pop	{r3, r4, r5, pc}
 800076c:	200001b8 	.word	0x200001b8

08000770 <_write_r>:
 8000770:	b538      	push	{r3, r4, r5, lr}
 8000772:	4d07      	ldr	r5, [pc, #28]	; (8000790 <_write_r+0x20>)
 8000774:	4604      	mov	r4, r0
 8000776:	4608      	mov	r0, r1
 8000778:	4611      	mov	r1, r2
 800077a:	2200      	movs	r2, #0
 800077c:	602a      	str	r2, [r5, #0]
 800077e:	461a      	mov	r2, r3
 8000780:	f7ff fdf1 	bl	8000366 <_write>
 8000784:	1c43      	adds	r3, r0, #1
 8000786:	d102      	bne.n	800078e <_write_r+0x1e>
 8000788:	682b      	ldr	r3, [r5, #0]
 800078a:	b103      	cbz	r3, 800078e <_write_r+0x1e>
 800078c:	6023      	str	r3, [r4, #0]
 800078e:	bd38      	pop	{r3, r4, r5, pc}
 8000790:	200001b8 	.word	0x200001b8

08000794 <__errno>:
 8000794:	4b01      	ldr	r3, [pc, #4]	; (800079c <__errno+0x8>)
 8000796:	6818      	ldr	r0, [r3, #0]
 8000798:	4770      	bx	lr
 800079a:	bf00      	nop
 800079c:	20000058 	.word	0x20000058

080007a0 <__libc_init_array>:
 80007a0:	b570      	push	{r4, r5, r6, lr}
 80007a2:	4d0d      	ldr	r5, [pc, #52]	; (80007d8 <__libc_init_array+0x38>)
 80007a4:	4c0d      	ldr	r4, [pc, #52]	; (80007dc <__libc_init_array+0x3c>)
 80007a6:	1b64      	subs	r4, r4, r5
 80007a8:	10a4      	asrs	r4, r4, #2
 80007aa:	2600      	movs	r6, #0
 80007ac:	42a6      	cmp	r6, r4
 80007ae:	d109      	bne.n	80007c4 <__libc_init_array+0x24>
 80007b0:	4d0b      	ldr	r5, [pc, #44]	; (80007e0 <__libc_init_array+0x40>)
 80007b2:	4c0c      	ldr	r4, [pc, #48]	; (80007e4 <__libc_init_array+0x44>)
 80007b4:	f000 fdc0 	bl	8001338 <_init>
 80007b8:	1b64      	subs	r4, r4, r5
 80007ba:	10a4      	asrs	r4, r4, #2
 80007bc:	2600      	movs	r6, #0
 80007be:	42a6      	cmp	r6, r4
 80007c0:	d105      	bne.n	80007ce <__libc_init_array+0x2e>
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80007c8:	4798      	blx	r3
 80007ca:	3601      	adds	r6, #1
 80007cc:	e7ee      	b.n	80007ac <__libc_init_array+0xc>
 80007ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80007d2:	4798      	blx	r3
 80007d4:	3601      	adds	r6, #1
 80007d6:	e7f2      	b.n	80007be <__libc_init_array+0x1e>
 80007d8:	0800140c 	.word	0x0800140c
 80007dc:	0800140c 	.word	0x0800140c
 80007e0:	0800140c 	.word	0x0800140c
 80007e4:	08001410 	.word	0x08001410

080007e8 <__retarget_lock_init_recursive>:
 80007e8:	4770      	bx	lr

080007ea <__retarget_lock_acquire_recursive>:
 80007ea:	4770      	bx	lr

080007ec <__retarget_lock_release_recursive>:
 80007ec:	4770      	bx	lr
	...

080007f0 <_free_r>:
 80007f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80007f2:	2900      	cmp	r1, #0
 80007f4:	d044      	beq.n	8000880 <_free_r+0x90>
 80007f6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80007fa:	9001      	str	r0, [sp, #4]
 80007fc:	2b00      	cmp	r3, #0
 80007fe:	f1a1 0404 	sub.w	r4, r1, #4
 8000802:	bfb8      	it	lt
 8000804:	18e4      	addlt	r4, r4, r3
 8000806:	f000 f8df 	bl	80009c8 <__malloc_lock>
 800080a:	4a1e      	ldr	r2, [pc, #120]	; (8000884 <_free_r+0x94>)
 800080c:	9801      	ldr	r0, [sp, #4]
 800080e:	6813      	ldr	r3, [r2, #0]
 8000810:	b933      	cbnz	r3, 8000820 <_free_r+0x30>
 8000812:	6063      	str	r3, [r4, #4]
 8000814:	6014      	str	r4, [r2, #0]
 8000816:	b003      	add	sp, #12
 8000818:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800081c:	f000 b8da 	b.w	80009d4 <__malloc_unlock>
 8000820:	42a3      	cmp	r3, r4
 8000822:	d908      	bls.n	8000836 <_free_r+0x46>
 8000824:	6825      	ldr	r5, [r4, #0]
 8000826:	1961      	adds	r1, r4, r5
 8000828:	428b      	cmp	r3, r1
 800082a:	bf01      	itttt	eq
 800082c:	6819      	ldreq	r1, [r3, #0]
 800082e:	685b      	ldreq	r3, [r3, #4]
 8000830:	1949      	addeq	r1, r1, r5
 8000832:	6021      	streq	r1, [r4, #0]
 8000834:	e7ed      	b.n	8000812 <_free_r+0x22>
 8000836:	461a      	mov	r2, r3
 8000838:	685b      	ldr	r3, [r3, #4]
 800083a:	b10b      	cbz	r3, 8000840 <_free_r+0x50>
 800083c:	42a3      	cmp	r3, r4
 800083e:	d9fa      	bls.n	8000836 <_free_r+0x46>
 8000840:	6811      	ldr	r1, [r2, #0]
 8000842:	1855      	adds	r5, r2, r1
 8000844:	42a5      	cmp	r5, r4
 8000846:	d10b      	bne.n	8000860 <_free_r+0x70>
 8000848:	6824      	ldr	r4, [r4, #0]
 800084a:	4421      	add	r1, r4
 800084c:	1854      	adds	r4, r2, r1
 800084e:	42a3      	cmp	r3, r4
 8000850:	6011      	str	r1, [r2, #0]
 8000852:	d1e0      	bne.n	8000816 <_free_r+0x26>
 8000854:	681c      	ldr	r4, [r3, #0]
 8000856:	685b      	ldr	r3, [r3, #4]
 8000858:	6053      	str	r3, [r2, #4]
 800085a:	440c      	add	r4, r1
 800085c:	6014      	str	r4, [r2, #0]
 800085e:	e7da      	b.n	8000816 <_free_r+0x26>
 8000860:	d902      	bls.n	8000868 <_free_r+0x78>
 8000862:	230c      	movs	r3, #12
 8000864:	6003      	str	r3, [r0, #0]
 8000866:	e7d6      	b.n	8000816 <_free_r+0x26>
 8000868:	6825      	ldr	r5, [r4, #0]
 800086a:	1961      	adds	r1, r4, r5
 800086c:	428b      	cmp	r3, r1
 800086e:	bf04      	itt	eq
 8000870:	6819      	ldreq	r1, [r3, #0]
 8000872:	685b      	ldreq	r3, [r3, #4]
 8000874:	6063      	str	r3, [r4, #4]
 8000876:	bf04      	itt	eq
 8000878:	1949      	addeq	r1, r1, r5
 800087a:	6021      	streq	r1, [r4, #0]
 800087c:	6054      	str	r4, [r2, #4]
 800087e:	e7ca      	b.n	8000816 <_free_r+0x26>
 8000880:	b003      	add	sp, #12
 8000882:	bd30      	pop	{r4, r5, pc}
 8000884:	200001c0 	.word	0x200001c0

08000888 <sbrk_aligned>:
 8000888:	b570      	push	{r4, r5, r6, lr}
 800088a:	4e0e      	ldr	r6, [pc, #56]	; (80008c4 <sbrk_aligned+0x3c>)
 800088c:	460c      	mov	r4, r1
 800088e:	6831      	ldr	r1, [r6, #0]
 8000890:	4605      	mov	r5, r0
 8000892:	b911      	cbnz	r1, 800089a <sbrk_aligned+0x12>
 8000894:	f000 fcbc 	bl	8001210 <_sbrk_r>
 8000898:	6030      	str	r0, [r6, #0]
 800089a:	4621      	mov	r1, r4
 800089c:	4628      	mov	r0, r5
 800089e:	f000 fcb7 	bl	8001210 <_sbrk_r>
 80008a2:	1c43      	adds	r3, r0, #1
 80008a4:	d00a      	beq.n	80008bc <sbrk_aligned+0x34>
 80008a6:	1cc4      	adds	r4, r0, #3
 80008a8:	f024 0403 	bic.w	r4, r4, #3
 80008ac:	42a0      	cmp	r0, r4
 80008ae:	d007      	beq.n	80008c0 <sbrk_aligned+0x38>
 80008b0:	1a21      	subs	r1, r4, r0
 80008b2:	4628      	mov	r0, r5
 80008b4:	f000 fcac 	bl	8001210 <_sbrk_r>
 80008b8:	3001      	adds	r0, #1
 80008ba:	d101      	bne.n	80008c0 <sbrk_aligned+0x38>
 80008bc:	f04f 34ff 	mov.w	r4, #4294967295
 80008c0:	4620      	mov	r0, r4
 80008c2:	bd70      	pop	{r4, r5, r6, pc}
 80008c4:	200001c4 	.word	0x200001c4

080008c8 <_malloc_r>:
 80008c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008cc:	1ccd      	adds	r5, r1, #3
 80008ce:	f025 0503 	bic.w	r5, r5, #3
 80008d2:	3508      	adds	r5, #8
 80008d4:	2d0c      	cmp	r5, #12
 80008d6:	bf38      	it	cc
 80008d8:	250c      	movcc	r5, #12
 80008da:	2d00      	cmp	r5, #0
 80008dc:	4607      	mov	r7, r0
 80008de:	db01      	blt.n	80008e4 <_malloc_r+0x1c>
 80008e0:	42a9      	cmp	r1, r5
 80008e2:	d905      	bls.n	80008f0 <_malloc_r+0x28>
 80008e4:	230c      	movs	r3, #12
 80008e6:	603b      	str	r3, [r7, #0]
 80008e8:	2600      	movs	r6, #0
 80008ea:	4630      	mov	r0, r6
 80008ec:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008f0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 80009c4 <_malloc_r+0xfc>
 80008f4:	f000 f868 	bl	80009c8 <__malloc_lock>
 80008f8:	f8d8 3000 	ldr.w	r3, [r8]
 80008fc:	461c      	mov	r4, r3
 80008fe:	bb5c      	cbnz	r4, 8000958 <_malloc_r+0x90>
 8000900:	4629      	mov	r1, r5
 8000902:	4638      	mov	r0, r7
 8000904:	f7ff ffc0 	bl	8000888 <sbrk_aligned>
 8000908:	1c43      	adds	r3, r0, #1
 800090a:	4604      	mov	r4, r0
 800090c:	d155      	bne.n	80009ba <_malloc_r+0xf2>
 800090e:	f8d8 4000 	ldr.w	r4, [r8]
 8000912:	4626      	mov	r6, r4
 8000914:	2e00      	cmp	r6, #0
 8000916:	d145      	bne.n	80009a4 <_malloc_r+0xdc>
 8000918:	2c00      	cmp	r4, #0
 800091a:	d048      	beq.n	80009ae <_malloc_r+0xe6>
 800091c:	6823      	ldr	r3, [r4, #0]
 800091e:	4631      	mov	r1, r6
 8000920:	4638      	mov	r0, r7
 8000922:	eb04 0903 	add.w	r9, r4, r3
 8000926:	f000 fc73 	bl	8001210 <_sbrk_r>
 800092a:	4581      	cmp	r9, r0
 800092c:	d13f      	bne.n	80009ae <_malloc_r+0xe6>
 800092e:	6821      	ldr	r1, [r4, #0]
 8000930:	1a6d      	subs	r5, r5, r1
 8000932:	4629      	mov	r1, r5
 8000934:	4638      	mov	r0, r7
 8000936:	f7ff ffa7 	bl	8000888 <sbrk_aligned>
 800093a:	3001      	adds	r0, #1
 800093c:	d037      	beq.n	80009ae <_malloc_r+0xe6>
 800093e:	6823      	ldr	r3, [r4, #0]
 8000940:	442b      	add	r3, r5
 8000942:	6023      	str	r3, [r4, #0]
 8000944:	f8d8 3000 	ldr.w	r3, [r8]
 8000948:	2b00      	cmp	r3, #0
 800094a:	d038      	beq.n	80009be <_malloc_r+0xf6>
 800094c:	685a      	ldr	r2, [r3, #4]
 800094e:	42a2      	cmp	r2, r4
 8000950:	d12b      	bne.n	80009aa <_malloc_r+0xe2>
 8000952:	2200      	movs	r2, #0
 8000954:	605a      	str	r2, [r3, #4]
 8000956:	e00f      	b.n	8000978 <_malloc_r+0xb0>
 8000958:	6822      	ldr	r2, [r4, #0]
 800095a:	1b52      	subs	r2, r2, r5
 800095c:	d41f      	bmi.n	800099e <_malloc_r+0xd6>
 800095e:	2a0b      	cmp	r2, #11
 8000960:	d917      	bls.n	8000992 <_malloc_r+0xca>
 8000962:	1961      	adds	r1, r4, r5
 8000964:	42a3      	cmp	r3, r4
 8000966:	6025      	str	r5, [r4, #0]
 8000968:	bf18      	it	ne
 800096a:	6059      	strne	r1, [r3, #4]
 800096c:	6863      	ldr	r3, [r4, #4]
 800096e:	bf08      	it	eq
 8000970:	f8c8 1000 	streq.w	r1, [r8]
 8000974:	5162      	str	r2, [r4, r5]
 8000976:	604b      	str	r3, [r1, #4]
 8000978:	4638      	mov	r0, r7
 800097a:	f104 060b 	add.w	r6, r4, #11
 800097e:	f000 f829 	bl	80009d4 <__malloc_unlock>
 8000982:	f026 0607 	bic.w	r6, r6, #7
 8000986:	1d23      	adds	r3, r4, #4
 8000988:	1af2      	subs	r2, r6, r3
 800098a:	d0ae      	beq.n	80008ea <_malloc_r+0x22>
 800098c:	1b9b      	subs	r3, r3, r6
 800098e:	50a3      	str	r3, [r4, r2]
 8000990:	e7ab      	b.n	80008ea <_malloc_r+0x22>
 8000992:	42a3      	cmp	r3, r4
 8000994:	6862      	ldr	r2, [r4, #4]
 8000996:	d1dd      	bne.n	8000954 <_malloc_r+0x8c>
 8000998:	f8c8 2000 	str.w	r2, [r8]
 800099c:	e7ec      	b.n	8000978 <_malloc_r+0xb0>
 800099e:	4623      	mov	r3, r4
 80009a0:	6864      	ldr	r4, [r4, #4]
 80009a2:	e7ac      	b.n	80008fe <_malloc_r+0x36>
 80009a4:	4634      	mov	r4, r6
 80009a6:	6876      	ldr	r6, [r6, #4]
 80009a8:	e7b4      	b.n	8000914 <_malloc_r+0x4c>
 80009aa:	4613      	mov	r3, r2
 80009ac:	e7cc      	b.n	8000948 <_malloc_r+0x80>
 80009ae:	230c      	movs	r3, #12
 80009b0:	603b      	str	r3, [r7, #0]
 80009b2:	4638      	mov	r0, r7
 80009b4:	f000 f80e 	bl	80009d4 <__malloc_unlock>
 80009b8:	e797      	b.n	80008ea <_malloc_r+0x22>
 80009ba:	6025      	str	r5, [r4, #0]
 80009bc:	e7dc      	b.n	8000978 <_malloc_r+0xb0>
 80009be:	605b      	str	r3, [r3, #4]
 80009c0:	deff      	udf	#255	; 0xff
 80009c2:	bf00      	nop
 80009c4:	200001c0 	.word	0x200001c0

080009c8 <__malloc_lock>:
 80009c8:	4801      	ldr	r0, [pc, #4]	; (80009d0 <__malloc_lock+0x8>)
 80009ca:	f7ff bf0e 	b.w	80007ea <__retarget_lock_acquire_recursive>
 80009ce:	bf00      	nop
 80009d0:	200001bc 	.word	0x200001bc

080009d4 <__malloc_unlock>:
 80009d4:	4801      	ldr	r0, [pc, #4]	; (80009dc <__malloc_unlock+0x8>)
 80009d6:	f7ff bf09 	b.w	80007ec <__retarget_lock_release_recursive>
 80009da:	bf00      	nop
 80009dc:	200001bc 	.word	0x200001bc

080009e0 <__sfputc_r>:
 80009e0:	6893      	ldr	r3, [r2, #8]
 80009e2:	3b01      	subs	r3, #1
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	b410      	push	{r4}
 80009e8:	6093      	str	r3, [r2, #8]
 80009ea:	da08      	bge.n	80009fe <__sfputc_r+0x1e>
 80009ec:	6994      	ldr	r4, [r2, #24]
 80009ee:	42a3      	cmp	r3, r4
 80009f0:	db01      	blt.n	80009f6 <__sfputc_r+0x16>
 80009f2:	290a      	cmp	r1, #10
 80009f4:	d103      	bne.n	80009fe <__sfputc_r+0x1e>
 80009f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009fa:	f000 bb73 	b.w	80010e4 <__swbuf_r>
 80009fe:	6813      	ldr	r3, [r2, #0]
 8000a00:	1c58      	adds	r0, r3, #1
 8000a02:	6010      	str	r0, [r2, #0]
 8000a04:	7019      	strb	r1, [r3, #0]
 8000a06:	4608      	mov	r0, r1
 8000a08:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a0c:	4770      	bx	lr

08000a0e <__sfputs_r>:
 8000a0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a10:	4606      	mov	r6, r0
 8000a12:	460f      	mov	r7, r1
 8000a14:	4614      	mov	r4, r2
 8000a16:	18d5      	adds	r5, r2, r3
 8000a18:	42ac      	cmp	r4, r5
 8000a1a:	d101      	bne.n	8000a20 <__sfputs_r+0x12>
 8000a1c:	2000      	movs	r0, #0
 8000a1e:	e007      	b.n	8000a30 <__sfputs_r+0x22>
 8000a20:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a24:	463a      	mov	r2, r7
 8000a26:	4630      	mov	r0, r6
 8000a28:	f7ff ffda 	bl	80009e0 <__sfputc_r>
 8000a2c:	1c43      	adds	r3, r0, #1
 8000a2e:	d1f3      	bne.n	8000a18 <__sfputs_r+0xa>
 8000a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a34 <_vfiprintf_r>:
 8000a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a38:	460d      	mov	r5, r1
 8000a3a:	b09d      	sub	sp, #116	; 0x74
 8000a3c:	4614      	mov	r4, r2
 8000a3e:	4698      	mov	r8, r3
 8000a40:	4606      	mov	r6, r0
 8000a42:	b118      	cbz	r0, 8000a4c <_vfiprintf_r+0x18>
 8000a44:	6a03      	ldr	r3, [r0, #32]
 8000a46:	b90b      	cbnz	r3, 8000a4c <_vfiprintf_r+0x18>
 8000a48:	f7ff fdca 	bl	80005e0 <__sinit>
 8000a4c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a4e:	07d9      	lsls	r1, r3, #31
 8000a50:	d405      	bmi.n	8000a5e <_vfiprintf_r+0x2a>
 8000a52:	89ab      	ldrh	r3, [r5, #12]
 8000a54:	059a      	lsls	r2, r3, #22
 8000a56:	d402      	bmi.n	8000a5e <_vfiprintf_r+0x2a>
 8000a58:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a5a:	f7ff fec6 	bl	80007ea <__retarget_lock_acquire_recursive>
 8000a5e:	89ab      	ldrh	r3, [r5, #12]
 8000a60:	071b      	lsls	r3, r3, #28
 8000a62:	d501      	bpl.n	8000a68 <_vfiprintf_r+0x34>
 8000a64:	692b      	ldr	r3, [r5, #16]
 8000a66:	b99b      	cbnz	r3, 8000a90 <_vfiprintf_r+0x5c>
 8000a68:	4629      	mov	r1, r5
 8000a6a:	4630      	mov	r0, r6
 8000a6c:	f000 fb78 	bl	8001160 <__swsetup_r>
 8000a70:	b170      	cbz	r0, 8000a90 <_vfiprintf_r+0x5c>
 8000a72:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a74:	07dc      	lsls	r4, r3, #31
 8000a76:	d504      	bpl.n	8000a82 <_vfiprintf_r+0x4e>
 8000a78:	f04f 30ff 	mov.w	r0, #4294967295
 8000a7c:	b01d      	add	sp, #116	; 0x74
 8000a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a82:	89ab      	ldrh	r3, [r5, #12]
 8000a84:	0598      	lsls	r0, r3, #22
 8000a86:	d4f7      	bmi.n	8000a78 <_vfiprintf_r+0x44>
 8000a88:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a8a:	f7ff feaf 	bl	80007ec <__retarget_lock_release_recursive>
 8000a8e:	e7f3      	b.n	8000a78 <_vfiprintf_r+0x44>
 8000a90:	2300      	movs	r3, #0
 8000a92:	9309      	str	r3, [sp, #36]	; 0x24
 8000a94:	2320      	movs	r3, #32
 8000a96:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a9a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a9e:	2330      	movs	r3, #48	; 0x30
 8000aa0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000c54 <_vfiprintf_r+0x220>
 8000aa4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000aa8:	f04f 0901 	mov.w	r9, #1
 8000aac:	4623      	mov	r3, r4
 8000aae:	469a      	mov	sl, r3
 8000ab0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ab4:	b10a      	cbz	r2, 8000aba <_vfiprintf_r+0x86>
 8000ab6:	2a25      	cmp	r2, #37	; 0x25
 8000ab8:	d1f9      	bne.n	8000aae <_vfiprintf_r+0x7a>
 8000aba:	ebba 0b04 	subs.w	fp, sl, r4
 8000abe:	d00b      	beq.n	8000ad8 <_vfiprintf_r+0xa4>
 8000ac0:	465b      	mov	r3, fp
 8000ac2:	4622      	mov	r2, r4
 8000ac4:	4629      	mov	r1, r5
 8000ac6:	4630      	mov	r0, r6
 8000ac8:	f7ff ffa1 	bl	8000a0e <__sfputs_r>
 8000acc:	3001      	adds	r0, #1
 8000ace:	f000 80a9 	beq.w	8000c24 <_vfiprintf_r+0x1f0>
 8000ad2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ad4:	445a      	add	r2, fp
 8000ad6:	9209      	str	r2, [sp, #36]	; 0x24
 8000ad8:	f89a 3000 	ldrb.w	r3, [sl]
 8000adc:	2b00      	cmp	r3, #0
 8000ade:	f000 80a1 	beq.w	8000c24 <_vfiprintf_r+0x1f0>
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	f04f 32ff 	mov.w	r2, #4294967295
 8000ae8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000aec:	f10a 0a01 	add.w	sl, sl, #1
 8000af0:	9304      	str	r3, [sp, #16]
 8000af2:	9307      	str	r3, [sp, #28]
 8000af4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000af8:	931a      	str	r3, [sp, #104]	; 0x68
 8000afa:	4654      	mov	r4, sl
 8000afc:	2205      	movs	r2, #5
 8000afe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b02:	4854      	ldr	r0, [pc, #336]	; (8000c54 <_vfiprintf_r+0x220>)
 8000b04:	f7ff fb6c 	bl	80001e0 <memchr>
 8000b08:	9a04      	ldr	r2, [sp, #16]
 8000b0a:	b9d8      	cbnz	r0, 8000b44 <_vfiprintf_r+0x110>
 8000b0c:	06d1      	lsls	r1, r2, #27
 8000b0e:	bf44      	itt	mi
 8000b10:	2320      	movmi	r3, #32
 8000b12:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b16:	0713      	lsls	r3, r2, #28
 8000b18:	bf44      	itt	mi
 8000b1a:	232b      	movmi	r3, #43	; 0x2b
 8000b1c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b20:	f89a 3000 	ldrb.w	r3, [sl]
 8000b24:	2b2a      	cmp	r3, #42	; 0x2a
 8000b26:	d015      	beq.n	8000b54 <_vfiprintf_r+0x120>
 8000b28:	9a07      	ldr	r2, [sp, #28]
 8000b2a:	4654      	mov	r4, sl
 8000b2c:	2000      	movs	r0, #0
 8000b2e:	f04f 0c0a 	mov.w	ip, #10
 8000b32:	4621      	mov	r1, r4
 8000b34:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b38:	3b30      	subs	r3, #48	; 0x30
 8000b3a:	2b09      	cmp	r3, #9
 8000b3c:	d94d      	bls.n	8000bda <_vfiprintf_r+0x1a6>
 8000b3e:	b1b0      	cbz	r0, 8000b6e <_vfiprintf_r+0x13a>
 8000b40:	9207      	str	r2, [sp, #28]
 8000b42:	e014      	b.n	8000b6e <_vfiprintf_r+0x13a>
 8000b44:	eba0 0308 	sub.w	r3, r0, r8
 8000b48:	fa09 f303 	lsl.w	r3, r9, r3
 8000b4c:	4313      	orrs	r3, r2
 8000b4e:	9304      	str	r3, [sp, #16]
 8000b50:	46a2      	mov	sl, r4
 8000b52:	e7d2      	b.n	8000afa <_vfiprintf_r+0xc6>
 8000b54:	9b03      	ldr	r3, [sp, #12]
 8000b56:	1d19      	adds	r1, r3, #4
 8000b58:	681b      	ldr	r3, [r3, #0]
 8000b5a:	9103      	str	r1, [sp, #12]
 8000b5c:	2b00      	cmp	r3, #0
 8000b5e:	bfbb      	ittet	lt
 8000b60:	425b      	neglt	r3, r3
 8000b62:	f042 0202 	orrlt.w	r2, r2, #2
 8000b66:	9307      	strge	r3, [sp, #28]
 8000b68:	9307      	strlt	r3, [sp, #28]
 8000b6a:	bfb8      	it	lt
 8000b6c:	9204      	strlt	r2, [sp, #16]
 8000b6e:	7823      	ldrb	r3, [r4, #0]
 8000b70:	2b2e      	cmp	r3, #46	; 0x2e
 8000b72:	d10c      	bne.n	8000b8e <_vfiprintf_r+0x15a>
 8000b74:	7863      	ldrb	r3, [r4, #1]
 8000b76:	2b2a      	cmp	r3, #42	; 0x2a
 8000b78:	d134      	bne.n	8000be4 <_vfiprintf_r+0x1b0>
 8000b7a:	9b03      	ldr	r3, [sp, #12]
 8000b7c:	1d1a      	adds	r2, r3, #4
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	9203      	str	r2, [sp, #12]
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	bfb8      	it	lt
 8000b86:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b8a:	3402      	adds	r4, #2
 8000b8c:	9305      	str	r3, [sp, #20]
 8000b8e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000c64 <_vfiprintf_r+0x230>
 8000b92:	7821      	ldrb	r1, [r4, #0]
 8000b94:	2203      	movs	r2, #3
 8000b96:	4650      	mov	r0, sl
 8000b98:	f7ff fb22 	bl	80001e0 <memchr>
 8000b9c:	b138      	cbz	r0, 8000bae <_vfiprintf_r+0x17a>
 8000b9e:	9b04      	ldr	r3, [sp, #16]
 8000ba0:	eba0 000a 	sub.w	r0, r0, sl
 8000ba4:	2240      	movs	r2, #64	; 0x40
 8000ba6:	4082      	lsls	r2, r0
 8000ba8:	4313      	orrs	r3, r2
 8000baa:	3401      	adds	r4, #1
 8000bac:	9304      	str	r3, [sp, #16]
 8000bae:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bb2:	4829      	ldr	r0, [pc, #164]	; (8000c58 <_vfiprintf_r+0x224>)
 8000bb4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bb8:	2206      	movs	r2, #6
 8000bba:	f7ff fb11 	bl	80001e0 <memchr>
 8000bbe:	2800      	cmp	r0, #0
 8000bc0:	d03f      	beq.n	8000c42 <_vfiprintf_r+0x20e>
 8000bc2:	4b26      	ldr	r3, [pc, #152]	; (8000c5c <_vfiprintf_r+0x228>)
 8000bc4:	bb1b      	cbnz	r3, 8000c0e <_vfiprintf_r+0x1da>
 8000bc6:	9b03      	ldr	r3, [sp, #12]
 8000bc8:	3307      	adds	r3, #7
 8000bca:	f023 0307 	bic.w	r3, r3, #7
 8000bce:	3308      	adds	r3, #8
 8000bd0:	9303      	str	r3, [sp, #12]
 8000bd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bd4:	443b      	add	r3, r7
 8000bd6:	9309      	str	r3, [sp, #36]	; 0x24
 8000bd8:	e768      	b.n	8000aac <_vfiprintf_r+0x78>
 8000bda:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bde:	460c      	mov	r4, r1
 8000be0:	2001      	movs	r0, #1
 8000be2:	e7a6      	b.n	8000b32 <_vfiprintf_r+0xfe>
 8000be4:	2300      	movs	r3, #0
 8000be6:	3401      	adds	r4, #1
 8000be8:	9305      	str	r3, [sp, #20]
 8000bea:	4619      	mov	r1, r3
 8000bec:	f04f 0c0a 	mov.w	ip, #10
 8000bf0:	4620      	mov	r0, r4
 8000bf2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bf6:	3a30      	subs	r2, #48	; 0x30
 8000bf8:	2a09      	cmp	r2, #9
 8000bfa:	d903      	bls.n	8000c04 <_vfiprintf_r+0x1d0>
 8000bfc:	2b00      	cmp	r3, #0
 8000bfe:	d0c6      	beq.n	8000b8e <_vfiprintf_r+0x15a>
 8000c00:	9105      	str	r1, [sp, #20]
 8000c02:	e7c4      	b.n	8000b8e <_vfiprintf_r+0x15a>
 8000c04:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c08:	4604      	mov	r4, r0
 8000c0a:	2301      	movs	r3, #1
 8000c0c:	e7f0      	b.n	8000bf0 <_vfiprintf_r+0x1bc>
 8000c0e:	ab03      	add	r3, sp, #12
 8000c10:	9300      	str	r3, [sp, #0]
 8000c12:	462a      	mov	r2, r5
 8000c14:	4b12      	ldr	r3, [pc, #72]	; (8000c60 <_vfiprintf_r+0x22c>)
 8000c16:	a904      	add	r1, sp, #16
 8000c18:	4630      	mov	r0, r6
 8000c1a:	f3af 8000 	nop.w
 8000c1e:	4607      	mov	r7, r0
 8000c20:	1c78      	adds	r0, r7, #1
 8000c22:	d1d6      	bne.n	8000bd2 <_vfiprintf_r+0x19e>
 8000c24:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c26:	07d9      	lsls	r1, r3, #31
 8000c28:	d405      	bmi.n	8000c36 <_vfiprintf_r+0x202>
 8000c2a:	89ab      	ldrh	r3, [r5, #12]
 8000c2c:	059a      	lsls	r2, r3, #22
 8000c2e:	d402      	bmi.n	8000c36 <_vfiprintf_r+0x202>
 8000c30:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c32:	f7ff fddb 	bl	80007ec <__retarget_lock_release_recursive>
 8000c36:	89ab      	ldrh	r3, [r5, #12]
 8000c38:	065b      	lsls	r3, r3, #25
 8000c3a:	f53f af1d 	bmi.w	8000a78 <_vfiprintf_r+0x44>
 8000c3e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c40:	e71c      	b.n	8000a7c <_vfiprintf_r+0x48>
 8000c42:	ab03      	add	r3, sp, #12
 8000c44:	9300      	str	r3, [sp, #0]
 8000c46:	462a      	mov	r2, r5
 8000c48:	4b05      	ldr	r3, [pc, #20]	; (8000c60 <_vfiprintf_r+0x22c>)
 8000c4a:	a904      	add	r1, sp, #16
 8000c4c:	4630      	mov	r0, r6
 8000c4e:	f000 f879 	bl	8000d44 <_printf_i>
 8000c52:	e7e4      	b.n	8000c1e <_vfiprintf_r+0x1ea>
 8000c54:	080013d8 	.word	0x080013d8
 8000c58:	080013e2 	.word	0x080013e2
 8000c5c:	00000000 	.word	0x00000000
 8000c60:	08000a0f 	.word	0x08000a0f
 8000c64:	080013de 	.word	0x080013de

08000c68 <_printf_common>:
 8000c68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c6c:	4616      	mov	r6, r2
 8000c6e:	4699      	mov	r9, r3
 8000c70:	688a      	ldr	r2, [r1, #8]
 8000c72:	690b      	ldr	r3, [r1, #16]
 8000c74:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c78:	4293      	cmp	r3, r2
 8000c7a:	bfb8      	it	lt
 8000c7c:	4613      	movlt	r3, r2
 8000c7e:	6033      	str	r3, [r6, #0]
 8000c80:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c84:	4607      	mov	r7, r0
 8000c86:	460c      	mov	r4, r1
 8000c88:	b10a      	cbz	r2, 8000c8e <_printf_common+0x26>
 8000c8a:	3301      	adds	r3, #1
 8000c8c:	6033      	str	r3, [r6, #0]
 8000c8e:	6823      	ldr	r3, [r4, #0]
 8000c90:	0699      	lsls	r1, r3, #26
 8000c92:	bf42      	ittt	mi
 8000c94:	6833      	ldrmi	r3, [r6, #0]
 8000c96:	3302      	addmi	r3, #2
 8000c98:	6033      	strmi	r3, [r6, #0]
 8000c9a:	6825      	ldr	r5, [r4, #0]
 8000c9c:	f015 0506 	ands.w	r5, r5, #6
 8000ca0:	d106      	bne.n	8000cb0 <_printf_common+0x48>
 8000ca2:	f104 0a19 	add.w	sl, r4, #25
 8000ca6:	68e3      	ldr	r3, [r4, #12]
 8000ca8:	6832      	ldr	r2, [r6, #0]
 8000caa:	1a9b      	subs	r3, r3, r2
 8000cac:	42ab      	cmp	r3, r5
 8000cae:	dc26      	bgt.n	8000cfe <_printf_common+0x96>
 8000cb0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000cb4:	1e13      	subs	r3, r2, #0
 8000cb6:	6822      	ldr	r2, [r4, #0]
 8000cb8:	bf18      	it	ne
 8000cba:	2301      	movne	r3, #1
 8000cbc:	0692      	lsls	r2, r2, #26
 8000cbe:	d42b      	bmi.n	8000d18 <_printf_common+0xb0>
 8000cc0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cc4:	4649      	mov	r1, r9
 8000cc6:	4638      	mov	r0, r7
 8000cc8:	47c0      	blx	r8
 8000cca:	3001      	adds	r0, #1
 8000ccc:	d01e      	beq.n	8000d0c <_printf_common+0xa4>
 8000cce:	6823      	ldr	r3, [r4, #0]
 8000cd0:	6922      	ldr	r2, [r4, #16]
 8000cd2:	f003 0306 	and.w	r3, r3, #6
 8000cd6:	2b04      	cmp	r3, #4
 8000cd8:	bf02      	ittt	eq
 8000cda:	68e5      	ldreq	r5, [r4, #12]
 8000cdc:	6833      	ldreq	r3, [r6, #0]
 8000cde:	1aed      	subeq	r5, r5, r3
 8000ce0:	68a3      	ldr	r3, [r4, #8]
 8000ce2:	bf0c      	ite	eq
 8000ce4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000ce8:	2500      	movne	r5, #0
 8000cea:	4293      	cmp	r3, r2
 8000cec:	bfc4      	itt	gt
 8000cee:	1a9b      	subgt	r3, r3, r2
 8000cf0:	18ed      	addgt	r5, r5, r3
 8000cf2:	2600      	movs	r6, #0
 8000cf4:	341a      	adds	r4, #26
 8000cf6:	42b5      	cmp	r5, r6
 8000cf8:	d11a      	bne.n	8000d30 <_printf_common+0xc8>
 8000cfa:	2000      	movs	r0, #0
 8000cfc:	e008      	b.n	8000d10 <_printf_common+0xa8>
 8000cfe:	2301      	movs	r3, #1
 8000d00:	4652      	mov	r2, sl
 8000d02:	4649      	mov	r1, r9
 8000d04:	4638      	mov	r0, r7
 8000d06:	47c0      	blx	r8
 8000d08:	3001      	adds	r0, #1
 8000d0a:	d103      	bne.n	8000d14 <_printf_common+0xac>
 8000d0c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d14:	3501      	adds	r5, #1
 8000d16:	e7c6      	b.n	8000ca6 <_printf_common+0x3e>
 8000d18:	18e1      	adds	r1, r4, r3
 8000d1a:	1c5a      	adds	r2, r3, #1
 8000d1c:	2030      	movs	r0, #48	; 0x30
 8000d1e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d22:	4422      	add	r2, r4
 8000d24:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d28:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d2c:	3302      	adds	r3, #2
 8000d2e:	e7c7      	b.n	8000cc0 <_printf_common+0x58>
 8000d30:	2301      	movs	r3, #1
 8000d32:	4622      	mov	r2, r4
 8000d34:	4649      	mov	r1, r9
 8000d36:	4638      	mov	r0, r7
 8000d38:	47c0      	blx	r8
 8000d3a:	3001      	adds	r0, #1
 8000d3c:	d0e6      	beq.n	8000d0c <_printf_common+0xa4>
 8000d3e:	3601      	adds	r6, #1
 8000d40:	e7d9      	b.n	8000cf6 <_printf_common+0x8e>
	...

08000d44 <_printf_i>:
 8000d44:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d48:	7e0f      	ldrb	r7, [r1, #24]
 8000d4a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d4c:	2f78      	cmp	r7, #120	; 0x78
 8000d4e:	4691      	mov	r9, r2
 8000d50:	4680      	mov	r8, r0
 8000d52:	460c      	mov	r4, r1
 8000d54:	469a      	mov	sl, r3
 8000d56:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d5a:	d807      	bhi.n	8000d6c <_printf_i+0x28>
 8000d5c:	2f62      	cmp	r7, #98	; 0x62
 8000d5e:	d80a      	bhi.n	8000d76 <_printf_i+0x32>
 8000d60:	2f00      	cmp	r7, #0
 8000d62:	f000 80d4 	beq.w	8000f0e <_printf_i+0x1ca>
 8000d66:	2f58      	cmp	r7, #88	; 0x58
 8000d68:	f000 80c0 	beq.w	8000eec <_printf_i+0x1a8>
 8000d6c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d70:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d74:	e03a      	b.n	8000dec <_printf_i+0xa8>
 8000d76:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d7a:	2b15      	cmp	r3, #21
 8000d7c:	d8f6      	bhi.n	8000d6c <_printf_i+0x28>
 8000d7e:	a101      	add	r1, pc, #4	; (adr r1, 8000d84 <_printf_i+0x40>)
 8000d80:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d84:	08000ddd 	.word	0x08000ddd
 8000d88:	08000df1 	.word	0x08000df1
 8000d8c:	08000d6d 	.word	0x08000d6d
 8000d90:	08000d6d 	.word	0x08000d6d
 8000d94:	08000d6d 	.word	0x08000d6d
 8000d98:	08000d6d 	.word	0x08000d6d
 8000d9c:	08000df1 	.word	0x08000df1
 8000da0:	08000d6d 	.word	0x08000d6d
 8000da4:	08000d6d 	.word	0x08000d6d
 8000da8:	08000d6d 	.word	0x08000d6d
 8000dac:	08000d6d 	.word	0x08000d6d
 8000db0:	08000ef5 	.word	0x08000ef5
 8000db4:	08000e1d 	.word	0x08000e1d
 8000db8:	08000eaf 	.word	0x08000eaf
 8000dbc:	08000d6d 	.word	0x08000d6d
 8000dc0:	08000d6d 	.word	0x08000d6d
 8000dc4:	08000f17 	.word	0x08000f17
 8000dc8:	08000d6d 	.word	0x08000d6d
 8000dcc:	08000e1d 	.word	0x08000e1d
 8000dd0:	08000d6d 	.word	0x08000d6d
 8000dd4:	08000d6d 	.word	0x08000d6d
 8000dd8:	08000eb7 	.word	0x08000eb7
 8000ddc:	682b      	ldr	r3, [r5, #0]
 8000dde:	1d1a      	adds	r2, r3, #4
 8000de0:	681b      	ldr	r3, [r3, #0]
 8000de2:	602a      	str	r2, [r5, #0]
 8000de4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000de8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000dec:	2301      	movs	r3, #1
 8000dee:	e09f      	b.n	8000f30 <_printf_i+0x1ec>
 8000df0:	6820      	ldr	r0, [r4, #0]
 8000df2:	682b      	ldr	r3, [r5, #0]
 8000df4:	0607      	lsls	r7, r0, #24
 8000df6:	f103 0104 	add.w	r1, r3, #4
 8000dfa:	6029      	str	r1, [r5, #0]
 8000dfc:	d501      	bpl.n	8000e02 <_printf_i+0xbe>
 8000dfe:	681e      	ldr	r6, [r3, #0]
 8000e00:	e003      	b.n	8000e0a <_printf_i+0xc6>
 8000e02:	0646      	lsls	r6, r0, #25
 8000e04:	d5fb      	bpl.n	8000dfe <_printf_i+0xba>
 8000e06:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000e0a:	2e00      	cmp	r6, #0
 8000e0c:	da03      	bge.n	8000e16 <_printf_i+0xd2>
 8000e0e:	232d      	movs	r3, #45	; 0x2d
 8000e10:	4276      	negs	r6, r6
 8000e12:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e16:	485a      	ldr	r0, [pc, #360]	; (8000f80 <_printf_i+0x23c>)
 8000e18:	230a      	movs	r3, #10
 8000e1a:	e012      	b.n	8000e42 <_printf_i+0xfe>
 8000e1c:	682b      	ldr	r3, [r5, #0]
 8000e1e:	6820      	ldr	r0, [r4, #0]
 8000e20:	1d19      	adds	r1, r3, #4
 8000e22:	6029      	str	r1, [r5, #0]
 8000e24:	0605      	lsls	r5, r0, #24
 8000e26:	d501      	bpl.n	8000e2c <_printf_i+0xe8>
 8000e28:	681e      	ldr	r6, [r3, #0]
 8000e2a:	e002      	b.n	8000e32 <_printf_i+0xee>
 8000e2c:	0641      	lsls	r1, r0, #25
 8000e2e:	d5fb      	bpl.n	8000e28 <_printf_i+0xe4>
 8000e30:	881e      	ldrh	r6, [r3, #0]
 8000e32:	4853      	ldr	r0, [pc, #332]	; (8000f80 <_printf_i+0x23c>)
 8000e34:	2f6f      	cmp	r7, #111	; 0x6f
 8000e36:	bf0c      	ite	eq
 8000e38:	2308      	moveq	r3, #8
 8000e3a:	230a      	movne	r3, #10
 8000e3c:	2100      	movs	r1, #0
 8000e3e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e42:	6865      	ldr	r5, [r4, #4]
 8000e44:	60a5      	str	r5, [r4, #8]
 8000e46:	2d00      	cmp	r5, #0
 8000e48:	bfa2      	ittt	ge
 8000e4a:	6821      	ldrge	r1, [r4, #0]
 8000e4c:	f021 0104 	bicge.w	r1, r1, #4
 8000e50:	6021      	strge	r1, [r4, #0]
 8000e52:	b90e      	cbnz	r6, 8000e58 <_printf_i+0x114>
 8000e54:	2d00      	cmp	r5, #0
 8000e56:	d04b      	beq.n	8000ef0 <_printf_i+0x1ac>
 8000e58:	4615      	mov	r5, r2
 8000e5a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e5e:	fb03 6711 	mls	r7, r3, r1, r6
 8000e62:	5dc7      	ldrb	r7, [r0, r7]
 8000e64:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e68:	4637      	mov	r7, r6
 8000e6a:	42bb      	cmp	r3, r7
 8000e6c:	460e      	mov	r6, r1
 8000e6e:	d9f4      	bls.n	8000e5a <_printf_i+0x116>
 8000e70:	2b08      	cmp	r3, #8
 8000e72:	d10b      	bne.n	8000e8c <_printf_i+0x148>
 8000e74:	6823      	ldr	r3, [r4, #0]
 8000e76:	07de      	lsls	r6, r3, #31
 8000e78:	d508      	bpl.n	8000e8c <_printf_i+0x148>
 8000e7a:	6923      	ldr	r3, [r4, #16]
 8000e7c:	6861      	ldr	r1, [r4, #4]
 8000e7e:	4299      	cmp	r1, r3
 8000e80:	bfde      	ittt	le
 8000e82:	2330      	movle	r3, #48	; 0x30
 8000e84:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e88:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e8c:	1b52      	subs	r2, r2, r5
 8000e8e:	6122      	str	r2, [r4, #16]
 8000e90:	f8cd a000 	str.w	sl, [sp]
 8000e94:	464b      	mov	r3, r9
 8000e96:	aa03      	add	r2, sp, #12
 8000e98:	4621      	mov	r1, r4
 8000e9a:	4640      	mov	r0, r8
 8000e9c:	f7ff fee4 	bl	8000c68 <_printf_common>
 8000ea0:	3001      	adds	r0, #1
 8000ea2:	d14a      	bne.n	8000f3a <_printf_i+0x1f6>
 8000ea4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ea8:	b004      	add	sp, #16
 8000eaa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000eae:	6823      	ldr	r3, [r4, #0]
 8000eb0:	f043 0320 	orr.w	r3, r3, #32
 8000eb4:	6023      	str	r3, [r4, #0]
 8000eb6:	4833      	ldr	r0, [pc, #204]	; (8000f84 <_printf_i+0x240>)
 8000eb8:	2778      	movs	r7, #120	; 0x78
 8000eba:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000ebe:	6823      	ldr	r3, [r4, #0]
 8000ec0:	6829      	ldr	r1, [r5, #0]
 8000ec2:	061f      	lsls	r7, r3, #24
 8000ec4:	f851 6b04 	ldr.w	r6, [r1], #4
 8000ec8:	d402      	bmi.n	8000ed0 <_printf_i+0x18c>
 8000eca:	065f      	lsls	r7, r3, #25
 8000ecc:	bf48      	it	mi
 8000ece:	b2b6      	uxthmi	r6, r6
 8000ed0:	07df      	lsls	r7, r3, #31
 8000ed2:	bf48      	it	mi
 8000ed4:	f043 0320 	orrmi.w	r3, r3, #32
 8000ed8:	6029      	str	r1, [r5, #0]
 8000eda:	bf48      	it	mi
 8000edc:	6023      	strmi	r3, [r4, #0]
 8000ede:	b91e      	cbnz	r6, 8000ee8 <_printf_i+0x1a4>
 8000ee0:	6823      	ldr	r3, [r4, #0]
 8000ee2:	f023 0320 	bic.w	r3, r3, #32
 8000ee6:	6023      	str	r3, [r4, #0]
 8000ee8:	2310      	movs	r3, #16
 8000eea:	e7a7      	b.n	8000e3c <_printf_i+0xf8>
 8000eec:	4824      	ldr	r0, [pc, #144]	; (8000f80 <_printf_i+0x23c>)
 8000eee:	e7e4      	b.n	8000eba <_printf_i+0x176>
 8000ef0:	4615      	mov	r5, r2
 8000ef2:	e7bd      	b.n	8000e70 <_printf_i+0x12c>
 8000ef4:	682b      	ldr	r3, [r5, #0]
 8000ef6:	6826      	ldr	r6, [r4, #0]
 8000ef8:	6961      	ldr	r1, [r4, #20]
 8000efa:	1d18      	adds	r0, r3, #4
 8000efc:	6028      	str	r0, [r5, #0]
 8000efe:	0635      	lsls	r5, r6, #24
 8000f00:	681b      	ldr	r3, [r3, #0]
 8000f02:	d501      	bpl.n	8000f08 <_printf_i+0x1c4>
 8000f04:	6019      	str	r1, [r3, #0]
 8000f06:	e002      	b.n	8000f0e <_printf_i+0x1ca>
 8000f08:	0670      	lsls	r0, r6, #25
 8000f0a:	d5fb      	bpl.n	8000f04 <_printf_i+0x1c0>
 8000f0c:	8019      	strh	r1, [r3, #0]
 8000f0e:	2300      	movs	r3, #0
 8000f10:	6123      	str	r3, [r4, #16]
 8000f12:	4615      	mov	r5, r2
 8000f14:	e7bc      	b.n	8000e90 <_printf_i+0x14c>
 8000f16:	682b      	ldr	r3, [r5, #0]
 8000f18:	1d1a      	adds	r2, r3, #4
 8000f1a:	602a      	str	r2, [r5, #0]
 8000f1c:	681d      	ldr	r5, [r3, #0]
 8000f1e:	6862      	ldr	r2, [r4, #4]
 8000f20:	2100      	movs	r1, #0
 8000f22:	4628      	mov	r0, r5
 8000f24:	f7ff f95c 	bl	80001e0 <memchr>
 8000f28:	b108      	cbz	r0, 8000f2e <_printf_i+0x1ea>
 8000f2a:	1b40      	subs	r0, r0, r5
 8000f2c:	6060      	str	r0, [r4, #4]
 8000f2e:	6863      	ldr	r3, [r4, #4]
 8000f30:	6123      	str	r3, [r4, #16]
 8000f32:	2300      	movs	r3, #0
 8000f34:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f38:	e7aa      	b.n	8000e90 <_printf_i+0x14c>
 8000f3a:	6923      	ldr	r3, [r4, #16]
 8000f3c:	462a      	mov	r2, r5
 8000f3e:	4649      	mov	r1, r9
 8000f40:	4640      	mov	r0, r8
 8000f42:	47d0      	blx	sl
 8000f44:	3001      	adds	r0, #1
 8000f46:	d0ad      	beq.n	8000ea4 <_printf_i+0x160>
 8000f48:	6823      	ldr	r3, [r4, #0]
 8000f4a:	079b      	lsls	r3, r3, #30
 8000f4c:	d413      	bmi.n	8000f76 <_printf_i+0x232>
 8000f4e:	68e0      	ldr	r0, [r4, #12]
 8000f50:	9b03      	ldr	r3, [sp, #12]
 8000f52:	4298      	cmp	r0, r3
 8000f54:	bfb8      	it	lt
 8000f56:	4618      	movlt	r0, r3
 8000f58:	e7a6      	b.n	8000ea8 <_printf_i+0x164>
 8000f5a:	2301      	movs	r3, #1
 8000f5c:	4632      	mov	r2, r6
 8000f5e:	4649      	mov	r1, r9
 8000f60:	4640      	mov	r0, r8
 8000f62:	47d0      	blx	sl
 8000f64:	3001      	adds	r0, #1
 8000f66:	d09d      	beq.n	8000ea4 <_printf_i+0x160>
 8000f68:	3501      	adds	r5, #1
 8000f6a:	68e3      	ldr	r3, [r4, #12]
 8000f6c:	9903      	ldr	r1, [sp, #12]
 8000f6e:	1a5b      	subs	r3, r3, r1
 8000f70:	42ab      	cmp	r3, r5
 8000f72:	dcf2      	bgt.n	8000f5a <_printf_i+0x216>
 8000f74:	e7eb      	b.n	8000f4e <_printf_i+0x20a>
 8000f76:	2500      	movs	r5, #0
 8000f78:	f104 0619 	add.w	r6, r4, #25
 8000f7c:	e7f5      	b.n	8000f6a <_printf_i+0x226>
 8000f7e:	bf00      	nop
 8000f80:	080013e9 	.word	0x080013e9
 8000f84:	080013fa 	.word	0x080013fa

08000f88 <__sflush_r>:
 8000f88:	898a      	ldrh	r2, [r1, #12]
 8000f8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f8e:	4605      	mov	r5, r0
 8000f90:	0710      	lsls	r0, r2, #28
 8000f92:	460c      	mov	r4, r1
 8000f94:	d458      	bmi.n	8001048 <__sflush_r+0xc0>
 8000f96:	684b      	ldr	r3, [r1, #4]
 8000f98:	2b00      	cmp	r3, #0
 8000f9a:	dc05      	bgt.n	8000fa8 <__sflush_r+0x20>
 8000f9c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f9e:	2b00      	cmp	r3, #0
 8000fa0:	dc02      	bgt.n	8000fa8 <__sflush_r+0x20>
 8000fa2:	2000      	movs	r0, #0
 8000fa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000fa8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000faa:	2e00      	cmp	r6, #0
 8000fac:	d0f9      	beq.n	8000fa2 <__sflush_r+0x1a>
 8000fae:	2300      	movs	r3, #0
 8000fb0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000fb4:	682f      	ldr	r7, [r5, #0]
 8000fb6:	6a21      	ldr	r1, [r4, #32]
 8000fb8:	602b      	str	r3, [r5, #0]
 8000fba:	d032      	beq.n	8001022 <__sflush_r+0x9a>
 8000fbc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000fbe:	89a3      	ldrh	r3, [r4, #12]
 8000fc0:	075a      	lsls	r2, r3, #29
 8000fc2:	d505      	bpl.n	8000fd0 <__sflush_r+0x48>
 8000fc4:	6863      	ldr	r3, [r4, #4]
 8000fc6:	1ac0      	subs	r0, r0, r3
 8000fc8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000fca:	b10b      	cbz	r3, 8000fd0 <__sflush_r+0x48>
 8000fcc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000fce:	1ac0      	subs	r0, r0, r3
 8000fd0:	2300      	movs	r3, #0
 8000fd2:	4602      	mov	r2, r0
 8000fd4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000fd6:	6a21      	ldr	r1, [r4, #32]
 8000fd8:	4628      	mov	r0, r5
 8000fda:	47b0      	blx	r6
 8000fdc:	1c43      	adds	r3, r0, #1
 8000fde:	89a3      	ldrh	r3, [r4, #12]
 8000fe0:	d106      	bne.n	8000ff0 <__sflush_r+0x68>
 8000fe2:	6829      	ldr	r1, [r5, #0]
 8000fe4:	291d      	cmp	r1, #29
 8000fe6:	d82b      	bhi.n	8001040 <__sflush_r+0xb8>
 8000fe8:	4a29      	ldr	r2, [pc, #164]	; (8001090 <__sflush_r+0x108>)
 8000fea:	410a      	asrs	r2, r1
 8000fec:	07d6      	lsls	r6, r2, #31
 8000fee:	d427      	bmi.n	8001040 <__sflush_r+0xb8>
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	6062      	str	r2, [r4, #4]
 8000ff4:	04d9      	lsls	r1, r3, #19
 8000ff6:	6922      	ldr	r2, [r4, #16]
 8000ff8:	6022      	str	r2, [r4, #0]
 8000ffa:	d504      	bpl.n	8001006 <__sflush_r+0x7e>
 8000ffc:	1c42      	adds	r2, r0, #1
 8000ffe:	d101      	bne.n	8001004 <__sflush_r+0x7c>
 8001000:	682b      	ldr	r3, [r5, #0]
 8001002:	b903      	cbnz	r3, 8001006 <__sflush_r+0x7e>
 8001004:	6560      	str	r0, [r4, #84]	; 0x54
 8001006:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001008:	602f      	str	r7, [r5, #0]
 800100a:	2900      	cmp	r1, #0
 800100c:	d0c9      	beq.n	8000fa2 <__sflush_r+0x1a>
 800100e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001012:	4299      	cmp	r1, r3
 8001014:	d002      	beq.n	800101c <__sflush_r+0x94>
 8001016:	4628      	mov	r0, r5
 8001018:	f7ff fbea 	bl	80007f0 <_free_r>
 800101c:	2000      	movs	r0, #0
 800101e:	6360      	str	r0, [r4, #52]	; 0x34
 8001020:	e7c0      	b.n	8000fa4 <__sflush_r+0x1c>
 8001022:	2301      	movs	r3, #1
 8001024:	4628      	mov	r0, r5
 8001026:	47b0      	blx	r6
 8001028:	1c41      	adds	r1, r0, #1
 800102a:	d1c8      	bne.n	8000fbe <__sflush_r+0x36>
 800102c:	682b      	ldr	r3, [r5, #0]
 800102e:	2b00      	cmp	r3, #0
 8001030:	d0c5      	beq.n	8000fbe <__sflush_r+0x36>
 8001032:	2b1d      	cmp	r3, #29
 8001034:	d001      	beq.n	800103a <__sflush_r+0xb2>
 8001036:	2b16      	cmp	r3, #22
 8001038:	d101      	bne.n	800103e <__sflush_r+0xb6>
 800103a:	602f      	str	r7, [r5, #0]
 800103c:	e7b1      	b.n	8000fa2 <__sflush_r+0x1a>
 800103e:	89a3      	ldrh	r3, [r4, #12]
 8001040:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001044:	81a3      	strh	r3, [r4, #12]
 8001046:	e7ad      	b.n	8000fa4 <__sflush_r+0x1c>
 8001048:	690f      	ldr	r7, [r1, #16]
 800104a:	2f00      	cmp	r7, #0
 800104c:	d0a9      	beq.n	8000fa2 <__sflush_r+0x1a>
 800104e:	0793      	lsls	r3, r2, #30
 8001050:	680e      	ldr	r6, [r1, #0]
 8001052:	bf08      	it	eq
 8001054:	694b      	ldreq	r3, [r1, #20]
 8001056:	600f      	str	r7, [r1, #0]
 8001058:	bf18      	it	ne
 800105a:	2300      	movne	r3, #0
 800105c:	eba6 0807 	sub.w	r8, r6, r7
 8001060:	608b      	str	r3, [r1, #8]
 8001062:	f1b8 0f00 	cmp.w	r8, #0
 8001066:	dd9c      	ble.n	8000fa2 <__sflush_r+0x1a>
 8001068:	6a21      	ldr	r1, [r4, #32]
 800106a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800106c:	4643      	mov	r3, r8
 800106e:	463a      	mov	r2, r7
 8001070:	4628      	mov	r0, r5
 8001072:	47b0      	blx	r6
 8001074:	2800      	cmp	r0, #0
 8001076:	dc06      	bgt.n	8001086 <__sflush_r+0xfe>
 8001078:	89a3      	ldrh	r3, [r4, #12]
 800107a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800107e:	81a3      	strh	r3, [r4, #12]
 8001080:	f04f 30ff 	mov.w	r0, #4294967295
 8001084:	e78e      	b.n	8000fa4 <__sflush_r+0x1c>
 8001086:	4407      	add	r7, r0
 8001088:	eba8 0800 	sub.w	r8, r8, r0
 800108c:	e7e9      	b.n	8001062 <__sflush_r+0xda>
 800108e:	bf00      	nop
 8001090:	dfbffffe 	.word	0xdfbffffe

08001094 <_fflush_r>:
 8001094:	b538      	push	{r3, r4, r5, lr}
 8001096:	690b      	ldr	r3, [r1, #16]
 8001098:	4605      	mov	r5, r0
 800109a:	460c      	mov	r4, r1
 800109c:	b913      	cbnz	r3, 80010a4 <_fflush_r+0x10>
 800109e:	2500      	movs	r5, #0
 80010a0:	4628      	mov	r0, r5
 80010a2:	bd38      	pop	{r3, r4, r5, pc}
 80010a4:	b118      	cbz	r0, 80010ae <_fflush_r+0x1a>
 80010a6:	6a03      	ldr	r3, [r0, #32]
 80010a8:	b90b      	cbnz	r3, 80010ae <_fflush_r+0x1a>
 80010aa:	f7ff fa99 	bl	80005e0 <__sinit>
 80010ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010b2:	2b00      	cmp	r3, #0
 80010b4:	d0f3      	beq.n	800109e <_fflush_r+0xa>
 80010b6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80010b8:	07d0      	lsls	r0, r2, #31
 80010ba:	d404      	bmi.n	80010c6 <_fflush_r+0x32>
 80010bc:	0599      	lsls	r1, r3, #22
 80010be:	d402      	bmi.n	80010c6 <_fflush_r+0x32>
 80010c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010c2:	f7ff fb92 	bl	80007ea <__retarget_lock_acquire_recursive>
 80010c6:	4628      	mov	r0, r5
 80010c8:	4621      	mov	r1, r4
 80010ca:	f7ff ff5d 	bl	8000f88 <__sflush_r>
 80010ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80010d0:	07da      	lsls	r2, r3, #31
 80010d2:	4605      	mov	r5, r0
 80010d4:	d4e4      	bmi.n	80010a0 <_fflush_r+0xc>
 80010d6:	89a3      	ldrh	r3, [r4, #12]
 80010d8:	059b      	lsls	r3, r3, #22
 80010da:	d4e1      	bmi.n	80010a0 <_fflush_r+0xc>
 80010dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80010de:	f7ff fb85 	bl	80007ec <__retarget_lock_release_recursive>
 80010e2:	e7dd      	b.n	80010a0 <_fflush_r+0xc>

080010e4 <__swbuf_r>:
 80010e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010e6:	460e      	mov	r6, r1
 80010e8:	4614      	mov	r4, r2
 80010ea:	4605      	mov	r5, r0
 80010ec:	b118      	cbz	r0, 80010f6 <__swbuf_r+0x12>
 80010ee:	6a03      	ldr	r3, [r0, #32]
 80010f0:	b90b      	cbnz	r3, 80010f6 <__swbuf_r+0x12>
 80010f2:	f7ff fa75 	bl	80005e0 <__sinit>
 80010f6:	69a3      	ldr	r3, [r4, #24]
 80010f8:	60a3      	str	r3, [r4, #8]
 80010fa:	89a3      	ldrh	r3, [r4, #12]
 80010fc:	071a      	lsls	r2, r3, #28
 80010fe:	d525      	bpl.n	800114c <__swbuf_r+0x68>
 8001100:	6923      	ldr	r3, [r4, #16]
 8001102:	b31b      	cbz	r3, 800114c <__swbuf_r+0x68>
 8001104:	6823      	ldr	r3, [r4, #0]
 8001106:	6922      	ldr	r2, [r4, #16]
 8001108:	1a98      	subs	r0, r3, r2
 800110a:	6963      	ldr	r3, [r4, #20]
 800110c:	b2f6      	uxtb	r6, r6
 800110e:	4283      	cmp	r3, r0
 8001110:	4637      	mov	r7, r6
 8001112:	dc04      	bgt.n	800111e <__swbuf_r+0x3a>
 8001114:	4621      	mov	r1, r4
 8001116:	4628      	mov	r0, r5
 8001118:	f7ff ffbc 	bl	8001094 <_fflush_r>
 800111c:	b9e0      	cbnz	r0, 8001158 <__swbuf_r+0x74>
 800111e:	68a3      	ldr	r3, [r4, #8]
 8001120:	3b01      	subs	r3, #1
 8001122:	60a3      	str	r3, [r4, #8]
 8001124:	6823      	ldr	r3, [r4, #0]
 8001126:	1c5a      	adds	r2, r3, #1
 8001128:	6022      	str	r2, [r4, #0]
 800112a:	701e      	strb	r6, [r3, #0]
 800112c:	6962      	ldr	r2, [r4, #20]
 800112e:	1c43      	adds	r3, r0, #1
 8001130:	429a      	cmp	r2, r3
 8001132:	d004      	beq.n	800113e <__swbuf_r+0x5a>
 8001134:	89a3      	ldrh	r3, [r4, #12]
 8001136:	07db      	lsls	r3, r3, #31
 8001138:	d506      	bpl.n	8001148 <__swbuf_r+0x64>
 800113a:	2e0a      	cmp	r6, #10
 800113c:	d104      	bne.n	8001148 <__swbuf_r+0x64>
 800113e:	4621      	mov	r1, r4
 8001140:	4628      	mov	r0, r5
 8001142:	f7ff ffa7 	bl	8001094 <_fflush_r>
 8001146:	b938      	cbnz	r0, 8001158 <__swbuf_r+0x74>
 8001148:	4638      	mov	r0, r7
 800114a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800114c:	4621      	mov	r1, r4
 800114e:	4628      	mov	r0, r5
 8001150:	f000 f806 	bl	8001160 <__swsetup_r>
 8001154:	2800      	cmp	r0, #0
 8001156:	d0d5      	beq.n	8001104 <__swbuf_r+0x20>
 8001158:	f04f 37ff 	mov.w	r7, #4294967295
 800115c:	e7f4      	b.n	8001148 <__swbuf_r+0x64>
	...

08001160 <__swsetup_r>:
 8001160:	b538      	push	{r3, r4, r5, lr}
 8001162:	4b2a      	ldr	r3, [pc, #168]	; (800120c <__swsetup_r+0xac>)
 8001164:	4605      	mov	r5, r0
 8001166:	6818      	ldr	r0, [r3, #0]
 8001168:	460c      	mov	r4, r1
 800116a:	b118      	cbz	r0, 8001174 <__swsetup_r+0x14>
 800116c:	6a03      	ldr	r3, [r0, #32]
 800116e:	b90b      	cbnz	r3, 8001174 <__swsetup_r+0x14>
 8001170:	f7ff fa36 	bl	80005e0 <__sinit>
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800117a:	0718      	lsls	r0, r3, #28
 800117c:	d422      	bmi.n	80011c4 <__swsetup_r+0x64>
 800117e:	06d9      	lsls	r1, r3, #27
 8001180:	d407      	bmi.n	8001192 <__swsetup_r+0x32>
 8001182:	2309      	movs	r3, #9
 8001184:	602b      	str	r3, [r5, #0]
 8001186:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800118a:	81a3      	strh	r3, [r4, #12]
 800118c:	f04f 30ff 	mov.w	r0, #4294967295
 8001190:	e034      	b.n	80011fc <__swsetup_r+0x9c>
 8001192:	0758      	lsls	r0, r3, #29
 8001194:	d512      	bpl.n	80011bc <__swsetup_r+0x5c>
 8001196:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001198:	b141      	cbz	r1, 80011ac <__swsetup_r+0x4c>
 800119a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800119e:	4299      	cmp	r1, r3
 80011a0:	d002      	beq.n	80011a8 <__swsetup_r+0x48>
 80011a2:	4628      	mov	r0, r5
 80011a4:	f7ff fb24 	bl	80007f0 <_free_r>
 80011a8:	2300      	movs	r3, #0
 80011aa:	6363      	str	r3, [r4, #52]	; 0x34
 80011ac:	89a3      	ldrh	r3, [r4, #12]
 80011ae:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011b2:	81a3      	strh	r3, [r4, #12]
 80011b4:	2300      	movs	r3, #0
 80011b6:	6063      	str	r3, [r4, #4]
 80011b8:	6923      	ldr	r3, [r4, #16]
 80011ba:	6023      	str	r3, [r4, #0]
 80011bc:	89a3      	ldrh	r3, [r4, #12]
 80011be:	f043 0308 	orr.w	r3, r3, #8
 80011c2:	81a3      	strh	r3, [r4, #12]
 80011c4:	6923      	ldr	r3, [r4, #16]
 80011c6:	b94b      	cbnz	r3, 80011dc <__swsetup_r+0x7c>
 80011c8:	89a3      	ldrh	r3, [r4, #12]
 80011ca:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011ce:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011d2:	d003      	beq.n	80011dc <__swsetup_r+0x7c>
 80011d4:	4621      	mov	r1, r4
 80011d6:	4628      	mov	r0, r5
 80011d8:	f000 f850 	bl	800127c <__smakebuf_r>
 80011dc:	89a0      	ldrh	r0, [r4, #12]
 80011de:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011e2:	f010 0301 	ands.w	r3, r0, #1
 80011e6:	d00a      	beq.n	80011fe <__swsetup_r+0x9e>
 80011e8:	2300      	movs	r3, #0
 80011ea:	60a3      	str	r3, [r4, #8]
 80011ec:	6963      	ldr	r3, [r4, #20]
 80011ee:	425b      	negs	r3, r3
 80011f0:	61a3      	str	r3, [r4, #24]
 80011f2:	6923      	ldr	r3, [r4, #16]
 80011f4:	b943      	cbnz	r3, 8001208 <__swsetup_r+0xa8>
 80011f6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011fa:	d1c4      	bne.n	8001186 <__swsetup_r+0x26>
 80011fc:	bd38      	pop	{r3, r4, r5, pc}
 80011fe:	0781      	lsls	r1, r0, #30
 8001200:	bf58      	it	pl
 8001202:	6963      	ldrpl	r3, [r4, #20]
 8001204:	60a3      	str	r3, [r4, #8]
 8001206:	e7f4      	b.n	80011f2 <__swsetup_r+0x92>
 8001208:	2000      	movs	r0, #0
 800120a:	e7f7      	b.n	80011fc <__swsetup_r+0x9c>
 800120c:	20000058 	.word	0x20000058

08001210 <_sbrk_r>:
 8001210:	b538      	push	{r3, r4, r5, lr}
 8001212:	4d06      	ldr	r5, [pc, #24]	; (800122c <_sbrk_r+0x1c>)
 8001214:	2300      	movs	r3, #0
 8001216:	4604      	mov	r4, r0
 8001218:	4608      	mov	r0, r1
 800121a:	602b      	str	r3, [r5, #0]
 800121c:	f7ff f8f4 	bl	8000408 <_sbrk>
 8001220:	1c43      	adds	r3, r0, #1
 8001222:	d102      	bne.n	800122a <_sbrk_r+0x1a>
 8001224:	682b      	ldr	r3, [r5, #0]
 8001226:	b103      	cbz	r3, 800122a <_sbrk_r+0x1a>
 8001228:	6023      	str	r3, [r4, #0]
 800122a:	bd38      	pop	{r3, r4, r5, pc}
 800122c:	200001b8 	.word	0x200001b8

08001230 <__swhatbuf_r>:
 8001230:	b570      	push	{r4, r5, r6, lr}
 8001232:	460c      	mov	r4, r1
 8001234:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001238:	2900      	cmp	r1, #0
 800123a:	b096      	sub	sp, #88	; 0x58
 800123c:	4615      	mov	r5, r2
 800123e:	461e      	mov	r6, r3
 8001240:	da0d      	bge.n	800125e <__swhatbuf_r+0x2e>
 8001242:	89a3      	ldrh	r3, [r4, #12]
 8001244:	f013 0f80 	tst.w	r3, #128	; 0x80
 8001248:	f04f 0100 	mov.w	r1, #0
 800124c:	bf0c      	ite	eq
 800124e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001252:	2340      	movne	r3, #64	; 0x40
 8001254:	2000      	movs	r0, #0
 8001256:	6031      	str	r1, [r6, #0]
 8001258:	602b      	str	r3, [r5, #0]
 800125a:	b016      	add	sp, #88	; 0x58
 800125c:	bd70      	pop	{r4, r5, r6, pc}
 800125e:	466a      	mov	r2, sp
 8001260:	f000 f848 	bl	80012f4 <_fstat_r>
 8001264:	2800      	cmp	r0, #0
 8001266:	dbec      	blt.n	8001242 <__swhatbuf_r+0x12>
 8001268:	9901      	ldr	r1, [sp, #4]
 800126a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800126e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001272:	4259      	negs	r1, r3
 8001274:	4159      	adcs	r1, r3
 8001276:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800127a:	e7eb      	b.n	8001254 <__swhatbuf_r+0x24>

0800127c <__smakebuf_r>:
 800127c:	898b      	ldrh	r3, [r1, #12]
 800127e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001280:	079d      	lsls	r5, r3, #30
 8001282:	4606      	mov	r6, r0
 8001284:	460c      	mov	r4, r1
 8001286:	d507      	bpl.n	8001298 <__smakebuf_r+0x1c>
 8001288:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	6123      	str	r3, [r4, #16]
 8001290:	2301      	movs	r3, #1
 8001292:	6163      	str	r3, [r4, #20]
 8001294:	b002      	add	sp, #8
 8001296:	bd70      	pop	{r4, r5, r6, pc}
 8001298:	ab01      	add	r3, sp, #4
 800129a:	466a      	mov	r2, sp
 800129c:	f7ff ffc8 	bl	8001230 <__swhatbuf_r>
 80012a0:	9900      	ldr	r1, [sp, #0]
 80012a2:	4605      	mov	r5, r0
 80012a4:	4630      	mov	r0, r6
 80012a6:	f7ff fb0f 	bl	80008c8 <_malloc_r>
 80012aa:	b948      	cbnz	r0, 80012c0 <__smakebuf_r+0x44>
 80012ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012b0:	059a      	lsls	r2, r3, #22
 80012b2:	d4ef      	bmi.n	8001294 <__smakebuf_r+0x18>
 80012b4:	f023 0303 	bic.w	r3, r3, #3
 80012b8:	f043 0302 	orr.w	r3, r3, #2
 80012bc:	81a3      	strh	r3, [r4, #12]
 80012be:	e7e3      	b.n	8001288 <__smakebuf_r+0xc>
 80012c0:	89a3      	ldrh	r3, [r4, #12]
 80012c2:	6020      	str	r0, [r4, #0]
 80012c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80012c8:	81a3      	strh	r3, [r4, #12]
 80012ca:	9b00      	ldr	r3, [sp, #0]
 80012cc:	6163      	str	r3, [r4, #20]
 80012ce:	9b01      	ldr	r3, [sp, #4]
 80012d0:	6120      	str	r0, [r4, #16]
 80012d2:	b15b      	cbz	r3, 80012ec <__smakebuf_r+0x70>
 80012d4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80012d8:	4630      	mov	r0, r6
 80012da:	f000 f81d 	bl	8001318 <_isatty_r>
 80012de:	b128      	cbz	r0, 80012ec <__smakebuf_r+0x70>
 80012e0:	89a3      	ldrh	r3, [r4, #12]
 80012e2:	f023 0303 	bic.w	r3, r3, #3
 80012e6:	f043 0301 	orr.w	r3, r3, #1
 80012ea:	81a3      	strh	r3, [r4, #12]
 80012ec:	89a3      	ldrh	r3, [r4, #12]
 80012ee:	431d      	orrs	r5, r3
 80012f0:	81a5      	strh	r5, [r4, #12]
 80012f2:	e7cf      	b.n	8001294 <__smakebuf_r+0x18>

080012f4 <_fstat_r>:
 80012f4:	b538      	push	{r3, r4, r5, lr}
 80012f6:	4d07      	ldr	r5, [pc, #28]	; (8001314 <_fstat_r+0x20>)
 80012f8:	2300      	movs	r3, #0
 80012fa:	4604      	mov	r4, r0
 80012fc:	4608      	mov	r0, r1
 80012fe:	4611      	mov	r1, r2
 8001300:	602b      	str	r3, [r5, #0]
 8001302:	f7ff f858 	bl	80003b6 <_fstat>
 8001306:	1c43      	adds	r3, r0, #1
 8001308:	d102      	bne.n	8001310 <_fstat_r+0x1c>
 800130a:	682b      	ldr	r3, [r5, #0]
 800130c:	b103      	cbz	r3, 8001310 <_fstat_r+0x1c>
 800130e:	6023      	str	r3, [r4, #0]
 8001310:	bd38      	pop	{r3, r4, r5, pc}
 8001312:	bf00      	nop
 8001314:	200001b8 	.word	0x200001b8

08001318 <_isatty_r>:
 8001318:	b538      	push	{r3, r4, r5, lr}
 800131a:	4d06      	ldr	r5, [pc, #24]	; (8001334 <_isatty_r+0x1c>)
 800131c:	2300      	movs	r3, #0
 800131e:	4604      	mov	r4, r0
 8001320:	4608      	mov	r0, r1
 8001322:	602b      	str	r3, [r5, #0]
 8001324:	f7ff f857 	bl	80003d6 <_isatty>
 8001328:	1c43      	adds	r3, r0, #1
 800132a:	d102      	bne.n	8001332 <_isatty_r+0x1a>
 800132c:	682b      	ldr	r3, [r5, #0]
 800132e:	b103      	cbz	r3, 8001332 <_isatty_r+0x1a>
 8001330:	6023      	str	r3, [r4, #0]
 8001332:	bd38      	pop	{r3, r4, r5, pc}
 8001334:	200001b8 	.word	0x200001b8

08001338 <_init>:
 8001338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800133a:	bf00      	nop
 800133c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800133e:	bc08      	pop	{r3}
 8001340:	469e      	mov	lr, r3
 8001342:	4770      	bx	lr

08001344 <_fini>:
 8001344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001346:	bf00      	nop
 8001348:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800134a:	bc08      	pop	{r3}
 800134c:	469e      	mov	lr, r3
 800134e:	4770      	bx	lr
